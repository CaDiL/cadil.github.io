<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[CaDiL's blog]]></title>
  <link href="http://cadil.github.io/atom.xml" rel="self"/>
  <link href="http://cadil.github.io/"/>
  <updated>2016-04-13T22:13:45+09:00</updated>
  <id>http://cadil.github.io/</id>
  <author>
    <name><![CDATA[CaDiL]]></name>
    <email><![CDATA[kkhoschuluu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rspec-rails gem]]></title>
    <link href="http://cadil.github.io/blog/2016/04/13/rspec-rails-gem/"/>
    <updated>2016-04-13T20:32:33+09:00</updated>
    <id>http://cadil.github.io/blog/2016/04/13/rspec-rails-gem</id>
    <content type="html"><![CDATA[<h2>Танилцуулга</h2>

<p>Хамгийн хэрэгтэй гэсэн Development - gem - үүдээс эхнээс нь танилцаж явах болно. Мэдээж бид бүхэнд юуны ѳмнѳ rspec-rails gem хэрэгтэй. Rspec нь тест хийх зориулалттай framework ба олон талт боломжуудтай юм.</p>

<h3>Dev Gems</h3>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;better_errors&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;capybara-webkit&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;factory_girl_rails&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;ffaker&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;database_cleaner&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;letter_opener&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;pry&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;pry-nav&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;pry-rails&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.3.2&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;simple_bdd&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;shoulda-matchers&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;spring&#39;</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Дээр байгаа нийт 13 Development, test - gem - үүдийг нэг нэгээр нь дэлгэрэнгүй үзэх болно.
Энэ удаа бид gem &lsquo;rspec-rails&rsquo; дэлгэрэнгүй авч үзнэ. Rspec - ыг ажиллуулах үед <a href="https://github.com/thoughtbot/capybara-webkit">capybara-webkit</a> суулгахыг шаардана. Capybara-webkit-ыг суулгахын ѳмнѳ Qt libraries суулгасан байх шаардлагатай. <a href="https://github.com/thoughtbot/capybara-webkit/wiki/Installing-Qt-and-compiling-capybara-webkit">Энд</a> дарж суулгах заавартай танилцаарай.</p>

<h3>rspec-rails</h3>

<p>rspec-rails нь Rails 3.x 4.x зориулсан testing framework юм.
Gemfile - ын group :development, :test do - дотор бичиж ѳгнѳ:</p>

<figure class='code'><figcaption><span>Gemfile</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">group</span> <span class="ss">:development</span><span class="p">,</span> <span class="ss">:test</span> <span class="k">do</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;rspec-rails&#39;</span>
</span><span class='line'>   <span class="n">gem</span> <span class="s1">&#39;capybara-webkit&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Дараагаар нь терминал дээр:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install</span></code></pre></td></tr></table></div></figure>


<p>Bundle install хийгдэж дууссан бол, rspec - ээ суулгана. Терминал дээр:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails generate rspec:install</span></code></pre></td></tr></table></div></figure>


<p>/spec/rails_helper.rb замаар орон require ‘rspec/rails’ - ыг нэмнэ:</p>

<figure class='code'><figcaption><span>/spec/rails_helper.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rspec/rails&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Home Spec</h3>

<p>/spec - фолдер дотор features - фолдер шинээр үүсгэнэ. Энэ фолдер дотор бид spec-үүдээ бичээд явах юм.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd spec
</span><span class='line'>$ mkdir features</span></code></pre></td></tr></table></div></figure>


<p>Шинээр үүсгэсэн features - фолдер дотроо home_spec.rb - үүсгэж ѳгнѳ:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vi /spec/features/home_spec.rb</span></code></pre></td></tr></table></div></figure>


<p>Энэ хичээлийн явцад <a href="https://en.wikipedia.org/wiki/Vim_(text_editor">Vim</a> ашиглах ба та ѳѳрийн дурын editor-ыг ашиглах боломжтой.</p>

<figure class='code'><figcaption><span>/spec/features/home_spec.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;rails_helper&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">feature</span> <span class="s2">&quot;Home page уруу орох&quot;</span> <span class="k">do</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">scenario</span> <span class="s2">&quot;Хэрэглэгч, тавтай морилно уу гэсэн текст харах&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">visit</span> <span class="n">root_path</span>
</span><span class='line'>    <span class="n">expect</span><span class="p">(</span><span class="n">page</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">have_text</span><span class="p">(</span><span class="s2">&quot;Тавтай морилно уу CaDiL&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Spec - ыг ажиллуулах</h3>

<p>Бүх spec - ыг ажлуулах:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rspec</span></code></pre></td></tr></table></div></figure>


<p>Фолдер дотор байгаа spec-үүдыг ажлуулах:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rspec spec/features</span></code></pre></td></tr></table></div></figure>


<p>Нэг spec ажлуулах:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rspec spec/features/home_spec.rb</span></code></pre></td></tr></table></div></figure>


<h2>Spec-ын дагуу</h2>

<p>rspec ажиллуулж үзэн гарсан алдааны мэдээллээр алдааг засаж үзье.</p>

<p>Home controller - ыг index method - той хамт үүсгэх:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rails g controller Home index</span></code></pre></td></tr></table></div></figure>


<p>Home index - ыг үндсэн хуудсаар сонгож ѳгѳхын тулд app/config/routes.rb - уруу орон:</p>

<figure class='code'><figcaption><span>app/config/routes.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">root</span> <span class="s1">&#39;home#index&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>бичиж ѳгнѳ.</p>

<p>Шинээр үүсгэсэн Home index үрүү орон доорх мѳрийг бичиж ѳгнѳ:</p>

<figure class='code'><figcaption><span>app/views/home/index.html</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p&gt;</span>Тавтай морилно уу CaDiL<span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devise gem]]></title>
    <link href="http://cadil.github.io/blog/2016/04/12/devise-gem/"/>
    <updated>2016-04-12T21:03:10+09:00</updated>
    <id>http://cadil.github.io/blog/2016/04/12/devise-gem</id>
    <content type="html"><![CDATA[<h1>Devise Gem</h1>

<p>Devise нь Rails дээр суурилсан уян хатан <code>authentication</code> шийдлийн нэг юм.</p>

<ul>
<li>Rack дээр суурилсан</li>
<li>Rails engine дээр суурилсан бүрэн MVC шийдэл юм</li>
<li>Нэг цагт олон моделиуд зэрэг хандалт хийх боломжтой</li>
</ul>


<h1>Инфо</h1>

<p>Devise ѳргѳн ашиглагддаг gem болохоор internet-ээс хайхад хүссэн мэдээллээ авах боломжтой. Доорх линкээр орон мэдээлэл авах боломжтой: <a href="https://github.com/plataformatec/devise">Devise</a></p>

<h1>Эхлэл</h1>

<p>Devise 4.0 нь Rails 4.2 болон 4.2 дээшээ загваруудыг дэмжин ажиллана. Gemfile дотор хуулж ѳгѳх:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem 'devise'</span></code></pre></td></tr></table></div></figure>


<p>Хуулсан бол <code>bundle install</code> командыг ашиглан суулгана:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>Gemfile дотроо хуулан bundle install хийсэн бол <code>generate</code> хийн суулгах хэрэгтэй:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails generate devise:install</span></code></pre></td></tr></table></div></figure>


<p>Generate хийх явцад тохиргооны хэсэг гарч ирэх ба тэдгээрийг зааврын дагуу суулгах шаардлагатай. Тохиргоог хийж дууссан бол generate ашиглан Devise-д <code>модель</code> үүсгэж ѳгнѳ:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails generate devise MODEL</span></code></pre></td></tr></table></div></figure>


<p><code>MODEL</code> - ын оронд апплкейшны хэрэглэгчийн классын нэрийг бичиж ѳгнѳ. Уг тохиолдолд <code>User</code> эсвэл <code>Admin</code> байж болно. Модель үүсгэсэн бол <code>rake db:migrate</code> хийж ѳгнѳ</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake db:migrate</span></code></pre></td></tr></table></div></figure>


<h1>Helper</h1>

<p>Devise нь controller болон views дотор <code>helper</code> үүсгэж ѳгсѳн байгаа. Controller хэсэгт user authentication оруулж ѳгѳх бол before_action (тухайн моделийг User гэж үзвэл)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>before_action :authenticate_user!</span></code></pre></td></tr></table></div></figure>


<p>Devise model - т User - ээс ѳѳр утга оноож ѳгсѳн бол <code>“_user”</code> оронд <code>“_ѳѳрийн утга”</code>аа онож ѳгѳх зарчмаар явна.</p>

<p>Хэрэглэгч бүртгүүлсэн болохыг шалгах helper:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user_signed_in?</span></code></pre></td></tr></table></div></figure>


<p>Одоогоор нэвтрэн орсон хэрэглэгч:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>current_user</span></code></pre></td></tr></table></div></figure>


<p>Session рүү энэ хүрээллээр нэвтрэх боломжтой:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>user_session</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello, Rails! үргэлжлэл]]></title>
    <link href="http://cadil.github.io/blog/2016/01/13/hello-rails-2/"/>
    <updated>2016-01-13T23:12:01+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/13/hello-rails-2</id>
    <content type="html"><![CDATA[<h1>Цаг нэмэх</h1>

<p>Ерѳнхийдѳѳ applcation - оо Dynamic болгох ганц хоёр алхамтай танилцлаа.. Дараагийн алхам бол одоо харагдаж байгаа цаг нь хаанаас дамжин харагдаж байгааг тогтоон address хийж ѳгѳх юм.</p>

<p>Ruby-гын <code>Time.now()</code> method нь embed хийж hello.html.erb загварт дуудан ѳгч ажиллаж байна. Хэрэглэгч, хандагч, уг page руу хандах бүр хэдэн цаг болж байгааг яг таг харуулж байна. Жижиг хэмжээний ѳѳрчлѳлт оруулж үзэцгээе. Одоо харагдаж байгаа view хэсгийг энэ чигт нь үлдээж controller хэсэгт цагийг байрлуулах шаардлагатай гэж үзээд Controller хэсэгт action method - ыг <code>@time</code> гэсэн хувьсагчид орлуулна. </p>

<figure class='code'><figcaption><span>demo/app/controllers/say_controller.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SayController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>  <span class="vi">@time</span> <span class="o">=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">goodbye</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>.html.erb - загвар дотор, controller хэсэгт оруулж ѳгсѳн хувьсагчаа орлуулж бичнэ.</p>

<figure class='code'><figcaption><span>demo/app/views/say/hello.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Hello from Rails!<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span><span class='line'>  It is now <span class="err">&lt;</span>%= @time %&gt;
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Browser - ѳѳ refresh хийгээд харвал controller дээр нэмсэн хувьсагч маань views хэсэгт буюу энэ хоёрын хооронд утга дамжин амжилттайгаар дэлгэцэд хэвлэн харуулж байна. </p>

<p>Яагаад заавал controller - оос харуулж байгаа зүйлийг views - дээр зарлан, хоёр гурван юм нэмж хийж, ажил удаад байгаа юм гэж гайхаж магадгүй. Уг Application - дотор бол ингэж хийсэн хийгээгүй нээх ѳѳрчлѳлт гарахгүй. Гэхдээ логикоор харвал ингэж хийх нь бидэнд ашигтай юм. Жишээ нь: 
Application - оо цаашид хѳгжүүлж олон орны хэрэглэгч хандалт хийх боломжтой болгоё гэж тѳсѳѳлье. Үүн дээр үндэслэхэд, тухайн орны цагын бүсээс хамааран дэлгэцэнд хэдэн цаг болж байгааг харуулах нь чухал. Ингэж харуулахад хангалттай хэмжээний код нэмж бичих хэрэг болно. Харин энэ их хэмжээний код нь views - д тийм тохиромжтой шийдэл болж чадахгүй л болох уу! Харин controller - т цагийг харуулахаар шийдэж ѳгснѳѳр уг application - ыг илүү уян хатан боглож ѳгч байгаа ба controller хэсгээс ѳѳрчлѳсѳн цагын бүс нь views хэсэгт мѳн time object - ыг update хийгээд байх шаардлага байхгүй гэсэн үг юм. Цагыг Data гэж үз, тэгвэл заавал view болон controller - тэй холбогдсон байх шаардлагтай. Цаашид Model гэж судлаад ирэхээр бид энэ тухай илүү ихийг сурах болно.</p>

<h1>Дүгнээд нэг харвал</h1>

<ul>
<li>Хэрэглэгч уг application-нд хандалтыг local-оос <a href="http://localhost:3000/say/hello">http://localhost:3000/say/hello</a> - URL хаягаар хандан орсон..</li>
<li>Rails - routes - ыг тааруулж ѳгсѳн. 2 хэсэгт хуваан авч үзвэл, <code>say</code> хэсэг нь controller хэсгийг авч, ингэснээр Rails нь шинээр Ruby-гын SayController хэсгийг дуурайлган буюу удамшуулан үүсгэх боломжтой болсон. (app/controllers/say_controller.rb - гэх дарааллаар олж болно)</li>
<li>Дараагийн хэсэгт нь <code>hello</code> - ыг action - гэдгийг тодорхойлсон. Rails нь тухайн нэрийн дагуу controller - оос method - ыг дуудсан. Энэхүү action method нь time object - ыг үүсгэж, <code>@time</code> гэсэн хувьсагч болгосон.</li>
<li>Rails нь загвар ашиглан үр дүнг дэлгэцэд хэвлэдэг болсон. App/view directory -> subdirectory нь controller-ын (say) - тэй адил нэрээр, тэрхүү subdirectory дотор hello.html.erb.</li>
<li>Rails нь уг файлыг <code>ERB templating system</code> - руу боловсруулан, controller хэсэгт утгыг (value) заан Ruby - д оруулж (embed) ѳгсѳн.</li>
<li>Үр дүнг browser дээрээс харахад, Rails хүсэлтүүдийг боловсруулан, ажиллаж байсан.</li>
</ul>


<h1>Pages - үүдыг холбох</h1>

<p>Нэг хуудастай Web Application гэж ч бас хаана байхав. Энэ удаа бид applicaiton - доо энгийн веб загвар хийж үзэцгээе.</p>

<p>2 action - доо нэг controller ашиглана. Яагаад гэвэл бидэнд одоо шинээр controller - үүсгээд байх шаардлага гараагүй болохоор.</p>

<p>Goodbye action - г controller - т define хийгээд ѳгчихсѳн болохоор одоо app/views/say дотор шинэ template үүсгэж ѳгѳх юм. Goodbye.html.erb гэж байгаа учир нь action нь default template загвар авах үедээ action - ын нэртэй холбогдож байдаг болохоор гэж ойлгож болно. </p>

<figure class='code'><figcaption><span>demo/app/views/say/goodbye.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Goodbye!<span class="nt">&lt;/h1&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span>
</span><span class='line'>  Энд байх сайхан байна.
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Browser - рүүгээ ороод энэ удаа URL хаягаа ѳѳрчлѳѳд хандалт хийнэ. <a href="http://localhost:3000/say/goodbye">http://localhost:3000/say/goodbye</a></p>

<p>Харин одоо хоёр page - ээ хооронд нь холболт хийх хэрэгтэй. Hello page - ыг Goodbye page - тэй холбоно. Цаашид application хийхдээ хоорондын холболтыг button ашиглаж хийнэ, энэ удаа зүгээр hyperlink - ашиглаад хийчихье.</p>

<p>hello.html.erb - иймэрхүү байдлаар:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;p&gt; </span>
</span><span class='line'><span class="x">  Say &lt;a href=&quot;/say/goodbye&quot;&gt;Goodbye&lt;/a&gt;! </span>
</span><span class='line'><span class="x">&lt;/p&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p>Харин goodbye.html.erb:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;p&gt; </span>
</span><span class='line'><span class="x">  Say &lt;a href=&quot;/say/hello&quot;&gt;Hello&lt;/a&gt;! </span>
</span><span class='line'><span class="x">&lt;/p&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p>Дээрx аргаар бичиж болно, асуудалгүй ажиллана. Нѳгѳѳ талаас жаахан эмзэг л болох юм даа. Уг Application - ынхаа web server - ыг ѳѳрчлѳѳд үзьѳ гэж бодоход URL - ууд шууд танихаа болино. 
Тийм болохоор, бид иймэрхүү эрсдэл хүлээх хэрэг байхгүй. Rails цаанаасаа маш олон helper, methods байдаг болохоор ур аргуудыг views, template - д ашиглаж болно. Жишээл нь:
<code>link_to()</code> - энэ method нь action - нд hyperlink үүсгэж ѳгдѳг жишээтэй. Басаж болохгүй, энэ method - ын хийж чадах зүйл их шүү. 
hello.html.erb - дээ <code>link_to()</code> - ашиглаад үзье:</p>

<figure class='code'><figcaption><span>demo/app/views/say/hello.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;Hello from Rails!&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;</span>
</span><span class='line'><span class="x">  It is now </span><span class="cp">&lt;%=</span> <span class="vi">@time</span> <span class="cp">%&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/p&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;</span>
</span><span class='line'><span class="x">  Time to say</span>
</span><span class='line'><span class="x">  </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">&quot;Goodbye&quot;</span><span class="p">,</span> <span class="n">say_goodbye_path</span> <span class="cp">%&gt;</span><span class="x">!</span>
</span><span class='line'><span class="x">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Түр зогсоод энэ мѳрийг сайн харьцгаая:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">link_to</span> <span class="s2">&quot;Goodbye&quot;</span><span class="p">,</span> <span class="n">say_goodbye_path</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>Link_to</code> - оор дуудах үйлдэл хийгдэж байна. (Rails-д method-ыг templates, helpers- ыг бичихид илүү хялбар болгож ѳгсѳн)
<code>say_goodbye_path</code> нь зам гээд ойлгоход болно доо.</p>

<p>Goodbye.html.erb - мѳн адил аргаар:</p>

<figure class='code'><figcaption><span>demo/app/views/say/goodbye.html.erb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='erb'><span class='line'><span class="x">&lt;h1&gt;Goodbye!&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;</span>
</span><span class='line'><span class="x">  It was nice having you here.</span>
</span><span class='line'><span class="x">&lt;/p&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;</span>
</span><span class='line'><span class="x">  Say </span><span class="cp">&lt;%=</span> <span class="n">link_to</span> <span class="s2">&quot;Hello&quot;</span><span class="p">,</span> <span class="n">say_hello_path</span> <span class="cp">%&gt;</span><span class="x"> again.</span>
</span><span class='line'><span class="x">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>За энэ хүрээд энгийн туршилтын application маань дуусаж байна. Дараагийн хичээлээр бид жинхэнэ application хийхэд суралцах болно. </p>

<h1>Бид юу хийсэн бэ?</h1>

<ul>
<li>Rails application хэрхэн шинээр үүсгэх, үүсгэсэн application - доо controller шинээр үүсгэж сурлаа.</li>
<li>Хэрхэн Dynamic контентыг controller дээр үүсгэх, үүсгэсэн контентоо view - ыг ашиглан харуулахад суралцсан.</li>
<li>Хэрхэн page хооронд холбох талаар үзлээ.</li>
</ul>


<p>Чамлахаар чанга атга, дээр үзсэн бүхэн дараагийн хичээлийн эхлэл юм шүү. Амжилт!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello, Rails!]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/hello/"/>
    <updated>2016-01-04T21:02:03+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/hello</id>
    <content type="html"><![CDATA[<p>“Hello World” гэсэн үгийг хэвлэх энгийн апплкейшн бичиж үзэцгээе. Энэ хэсэгт <code>Model-View-Controller</code> (MVC) суурь тавигдана.</p>

<!-- more -->


<p>Rails нь MVC framework буюу тогтолцоо юм. Rails нь browser - ѳѳс ирэх хүсэлтүүдийг хүлээн авч controller-т ирсэн хүсэлтүүдийг декод (тайлж унших) хийх бѳгѳѳд уг болж байгаа процессыг <code>action method</code> гэж нэрлэдэг.</p>

<p>Rails - аас авах нэг сайн тал гэвэл дотоод холболтууд нь цэгцтэй, дэс дараалалтай ер нь хамгийн сайн бүтэцтэй. “Hello World” - энгийн апплкейшн бичихийн тулд Controller, View шинээр үүсгэж кодлоно. Мэдээж энэ хоёрыг холбож ѳгсѳн холбоос, зам (route) хэрэгтэй. Нэг зүйл дутаагаад байна уу даа, гэж бодож байж магадгүй. Model - ыг яагаад бичихгүй юм бэ гэж гайхаж байгаа байх, хариулт нь, бидний одоо бичиж энэхүү апплкейшн нь ямар нэг байдлаар Data ч юм уу ѳгѳгдлийн сантай холбогдохгүй болохоор Model-ыг шууд алгасая. Эхлээд Controller - оос эхэлцгээе.
Шинээр апплейкшн үүсгэж байсан райлс командыг ашиглан одоогийн бяцхан тѳсѳл дотроо controller үүсгэх юм. rails generate - гэх энэ райлс командыг ашиглах ба цаашид бид <code>rails g</code> гэж товчилж бичиж явна шүү. Controller үүсгэж байгаа rails g - араас script бичиж ѳгѳх байгаа. За, “Say” гэсэн controller үүсгэцгээе.</p>

<pre><code>demo&gt; rails g controller Say hello goodbye
create app/controllers/say_controller.rb
 route  get "say/goodbye"
 route  get "say/hello"
invoke  erb
create    app/views/say
create    app/views/say/hello.html.erb
create    app/views/say/goodbye.html.erb
invoke  test_unit
create    test/controllers/say_controller_test.rb
invoke  helper
create    app/helpers/say_helper.rb
invoke    test_unit
create      test/helpers/say_helper_test.rb
invoke  assets
invoke    coffee
create      app/assets/javascripts/say.js.coffee
invoke    scss
create      app/assets/stylesheets/say.css.scss
</code></pre>

<p>За terminal доошоогоо бас л баахан шинэ файл, directories үүсчихлээ дээ. Удахгүй эдгээр файлууд нь ямар учиртай болохыг зах зухаас нь онгичож үзэцгээнэ. Ямартай ч эхлээд чухлаас нь:</p>

<figure class='code'><figcaption><span>demo/app/controller/say_controller.rb</span><a href='https://github.com/CaDiL/demo/blob/master/app/controllers/say_controller.rb'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SayController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">hello</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">goodbye</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Хоосон, ил хул, код байхгүй юм шиг санагдаж байна уу?
Нѳгѳѳ гоё удамшил ороод ирсэн байгаа юм л даа. Энгийнээр бол SayController гэсэн class нь ApplicationController - оос удамшчихлаа гэж. Нэг ёсондоо автомотоор бүхий л default утгуудыг нь ѳѳртѳѳ авчихлаа гэсэн үг л дээ. Тэхээр дээр байгаа код юу хийж болох, эсвэл яг одоогоор ямар үүрэг гүйцэтгэж байна гэж хэдүүлээ ѳѳрсѳддѳѳ асуулт тавиад үзэцгээе. Одоогоор бол дээрх код юу ч хийхгүй, ямар ч үүрэггүй байгаа л гэсэн үг. Маш энгийн, бидэнд <code>hello()</code> бас <code>goodbye()</code> гэсэн хоёр хоосон (empty) action method - ууд л байна. Яагаад бас hello(), goodbye() гэсэн method гараад ирэв ээ, гэж гайхаж байгаа байх. Энэ хэсгийг ойлгохын тулд ѳѳр нэг хэсэг үрүү ѳндийж харахгүй бол болохгүй нь дээ. Rails Handles requests буюу ирж байгаа хүсэлтүүдийг зохицуулагч.</p>

<h1>Rails болон Request URLs</h1>

<p>Яг л бусад веб апплкейшнуудын адил, Rails application - ын URL хаягийг хэрэглэгчтэй холбож ѳгч байгаа холболт юм. Тухайн URL - руу хандах хүсэлт browser - ээс явуулахад ар талд нь мэдээж тухайн хүсэлтийг боловсруулан (апп кодууд), эргүүлэн хэрэглэгч рүү хүргэх юм.
Туршаад үзье. <a href="http://localhost:3000/say/hello">http://localhost:3000/say/hello</a> - энэ хаяг руу хандалт хийгээд үзэцгээе.</p>

<h1>Бидний эхний action</h1>

<p>Дараагийн алхам маань дэлгэцэнд юу харуулах вэ гэх асуулт. Энэ хэсгээс л <code>View</code> орж ирж байгаа юм даа. Controller - шинээр үүсгэж байхдаа бид бүхэн ямар script ашиглаж байсныг санаж байна уу? Санахгүй байгаа бол эргүүлэн нэг хараарай. Тэр командаар терминал доошоо олон файл, directory үүссэн байхаа. Тэр дунд template файл буюу controller-ын views - үүссэн байгаа.. Үүннээс үзэхэд бид Say нэртэй controller үүсгэсэн. Тэгэхээр views маань app/view/say - directory-д байгаа юм.</p>

<figure class='code'><figcaption><span>demo/app/views/say/hello.html.erb</span><a href='https://github.com/CaDiL/demo/blob/master/app/views/say/hello.html.erb'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;h1&gt;</span>Hello from Rails!<span class="nt">&lt;/h1&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>hello.html.erb - файлаа хадаглаад, browser - оо refresh хийгээд үзээрэй. Одоо ойлгосон байх, тийм үү.</p>

<p>Дүгнээд нэг харахад, бид Rails Application Tree - гээс хоёр файлын утга, арга, үүрэг зэргийг судлаад эзэмшчихлээ. Controller  гэж юу болох талаар мэдэж авлаа, browser дээр template - modify хийж үзлээ. За тэгээд, Rails-ын шатлалыг харвал: controller нь app/controller дотор, views нь app/views гэсэн subdirectories дотор байрлаж байна.</p>

<h1>Гол нь Dynamic</h1>

<p>Апп гэж хэлэхэд хэцүү нэг энгийн static page ямартай ч хийчихлээ. Бага зэрэг Dynamic болговол ямарав, орох болгонд хэдэн цаг болж байгааг харуулдаг хэсэг нэмж ѳгцгѳѳе.
Нэмэхийн тулд views-д байгаа template файлыг ѳѳрчлѳх хэрэгтэй. Цаг (Time) - харуулах string хэрэг болох юм. Үүнээс улбаалаад хоёр асуулт үүснэ. Нэгт, хэрхэн яаж Dynamic Content - оо одоо байгаа template - дээ нэмэх вэ? Хоёрт, цагаа хаанаа авах юм бэ?</p>

<h1>Dynamic Content</h1>

<p>Райлс дотор Dynamic загвар оруулах олон арга бий. Хамгийн ѳргѳн ашигладдаг нь за одоо заагаад ѳгье. Ruby кодыг Template - тэйгээ embed (зарим энэ мэт үгийг орчуулахгүйгээр шууд хэрэглээд явна, угаасаа ч орчуулдахааргүй үг) хийх юм. Тиймээс л бид template файлаа show.html.erb гэж хадагалсан юм. Html.erb гэсэн формат залгаж бичсэн шалтгаан нь <code>ERB</code> гэсэн системыг Rails ѳрѳгжүүлэн дэмжээд явна.
ERB нь Ruby - ын нэгэн хэсэг болж суудаг ба суулгах энэ тэрээ зүйл дээр санаа зовоод байх хэрэггүй. Erb нь output - үүдыг хувирган юу ч хамаагүй болгож болдог. Энгийнээр бол <code>&lt;%= and %&gt;</code> - гэх код нь Рубю кодоор танигдах хэдий ч үр дүнд нь string болон хѳрвүүлэгдэж байгаад л онцлог юм. Тэхээр &lt;% … %> уг кодын дотор л утга аа оруулаад ѳгѳхѳд л үр дүн нь хэвлэгдэх юм. Жишээ нь:</p>

<figure class='code'><figcaption><span>demo/app/views/say/hello.html.erb</span><a href='https://github.com/CaDiL/demo/blob/master/app/views/say/hello.html.erb'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ERB'><span class='line'><span class="x">&lt;h1&gt;Hello from Rails!&lt;/h1&gt;</span>
</span><span class='line'><span class="x">&lt;p&gt;</span>
</span><span class='line'><span class="x">  Одоо цаг </span><span class="cp">&lt;%=</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span> <span class="cp">%&gt;</span><span class="x"> болж байна.</span>
</span><span class='line'><span class="x">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Одоо browser - оо refresh хийгээд үз. Харагдаж байгаа цаг бол Ruby - ын standard format - аар харагдаж байгаа гэдгийг л ойлгох нь чухал юм шүү.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Шинээр апплейкшн үүсгэх]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/shineer-applieikshn-uusghekh/"/>
    <updated>2016-01-04T20:56:26+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/shineer-applieikshn-uusghekh</id>
    <content type="html"><![CDATA[<p>Шинээр райлс апплейкшн create хийхийн ѳмнѳ бид эхлэл хэсгээсээ эхлээд зохион байгуулал, эмх цэгцтэй байх хэрэгтэй. <strong>Work</strong> гэсэн нэртэй <strong> шинэ directory </strong> үүсгэнэ. Энэ <strong> work </strong> гэсэн directory дотор тѳслүүдээ шинээр үүсгээд явбал эмх цэгцтэй, амар юм. Work - дотор demo гэсэн райлс аппклейкшн үүсгэцгээе.</p>

<pre><code>rubys&gt; mkdir work
rubys&gt; cd work
work&gt; rails new demo
create
create README.rdoc
create Rakefile
create config.ru
    :   :   :   :
create vendor/assets/stylesheets
create vendor/assets/stylesheets/.keep
   run bundle install
Fetching gem metadata from https://rubygems.rog/.......
    :   :   :   :
Your bundle is complete!
Use 'bundle show [gemname]' to see where a bundled gem is installed
work&gt;
</code></pre>

<p>Дээр бичигдсэн <strong> rails new demo</strong> коммандаар бид <strong>demo</strong> нэртэй <strong> directory</strong> үүсгэлээ. Терминал доошоогоо subdirectory болон олон шинэ файлуудыг автомотаар default - аар үүсгэж ѳгѳв.</p>

<pre><code>work&gt; cd demo
demo&gt; ls -p
app/  config/  db/  Gemfile.lock log/  Rakefile  test/   vendor/
bin/  config.ru  Gemfile lib/    public/  README.rdoc  tmp/
</code></pre>

<p>Гэх мэтээр directory - ууд үүсгэх ба энэхүү chapter - т бид эдгээрийг ашиглах шаардлага одооогоор гарахгүй ба зѳвхѳн app/ directory-д ѳѳрсдийн кодоо бичих нэмж оруулах юм.</p>

<p>Доорх коммандаар дэлгэрэнгүй мэдээлэл авах боломжтой:</p>

<pre><code>demo&gt; rake about
</code></pre>

<p>Мѳн дээрх кодоор алдаа хайж болдог ба жишээ нь JavaScript runtime  - олдохгүй байгаа бол алдааны мэдээлэл гаргаж боломжит линкүүдээс татаж авах хүсэлт ирүүлнэ.</p>

<p><strong>rake about</strong> - аар алдаа илэрээгүй бол цааш үргэлжүүлцгээе. Одоо юу хийх хэрэгтэй вэ гэхээр Stand-alone Web server - ыг асаахад л болно. Ингэж server асааж байж л бид шинээр үүсгэсэн райлс аппклейншаа ажиллуулах юм.</p>

<pre><code>demo&gt; rails server
=&gt; Booting WEBrick
=&gt; Rails 4.0.0 application starting in development on http://0.0.0.0:30000
=&gt; Run 'rails server -h' for more startup options
=&gt; Ctrl+C to shutdown server
[2013-04-18 20:22:16] INFO WEBrick 1.3.1
[2013-04-18 20:22:16] INFO ruby 2.0.0 (2013-02-24) [x86_64-linux] 
[2013-04-18 20:22:16] INFO WEBrick::HTTPServer#start: pid=25170 port=3000
</code></pre>

<p>Web Server нь ямар server суулгасан эсэхээс шалтгаалан ажиллах ба Ruby-гийн хувьд <strong>WEBrick server</strong> нь ruby-гийн цѳм нь болж ѳгсѳн нэг үгээр бол ruby-г илтгэж чадахаар нэгэн бүхэл хэсэг нь болсон сервер юм. Гэхдээ яах уу, ѳѳрийн дурын веб серверыг суулган Ruby on Rails тай хослуулан ажиллуулж болно. </p>

<p>Доорк коммандыг ашиглан WEBrick-ыг хүчлэн (force) ажиллуулж болно.</p>

<pre><code>demo&gt; rails server webtrick
</code></pre>

<p>Сервер асаасан код боксын хамгийн сүүлийн мѳрийг харвал server нь port:3000 дээр ассан байна. 0.0.0.0 гэсэн холболтыг авч үзвэл WEBrick нь тухайн address-д connection - д бүхэл талын зѳвшѳѳрлыг олгож байна гэж ойлгож болно. Ойлгогдохоор хэлбэл дурын browser дээр **<a href="http://localhost:3000**">http://localhost:3000**</a> address - аар хандан сервер рүү холбогдох юм.</p>

<p>Сервер ээ асаагаад localhost-oos харж болж байна. Терминал дээр сервер дээр болж байгаа үйл явцыг <code>tracking</code> - хийх боломжтой юм.</p>

<p><code>Ctrl + C</code> - командыг ашиглан WEBrick-ыг унтраана. Гэхдээ одоохондоо битгий унтраагаарай бид цааш үргэлжлүүлэн явах болхлоор…</p>

<p>Апплкейшнаа үүсгээд сервер ээ асаачихлаа, харин ерѳѳсѳѳ код бичсэнгүй ээ, тийм ээ? Дараагийн хэсгээс код уруу орцгооё!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Editor]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/editor/"/>
    <updated>2016-01-04T20:52:42+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/editor</id>
    <content type="html"><![CDATA[<p>Райлс апплкейшныг бид editor ашиглан бичих ба олон программчлалын хэл дэмждэг, хѳгжүүлэлт хийхэд хялбар байх шаардлага хангасан байх шаардлагатай. </p>

<!-- more -->


<ul>
<li><strong>TextMate</strong> нь Mac OS X дээрх стандарт хангасан Ruby on Rails - editor юм.</li>
<li><strong>Sublime Text</strong> нь нэг үгээр TextMate - ын залгамжлагч гэж ойлгож болох ба ихэнх хѳгжүүлэгчид уг editor-ыг сонгон авах нь элбэг.</li>
<li><strong>Aptana Studio 3</strong> нь Райлс хѳгжүүлэлтыг Eclipse - тэй нэгтгэсэн ба үйлдлийн систем голохгүй ажиллана. RadRails  - нэрээрээ илүү танил болсон. Уг editor нь 2006 онд Eclipse дээр суурилсан нээлттэй эх дээр бичигдсэн оны шилдэг Editor ѳргѳмжлѳл хүртэж байсан.</li>
<li><strong>jEdit</strong> нь Ruby - г бүрэн дэмжиж ажилладаг, plugin хувьд ѳргѳн цар хүрээг хамарч чадсан editor.</li>
<li><strong>Komodo</strong> нь ActiveState IDE -ын Dynamic хэлнүүдэд зориулагдсан ба мэдээж Ruby - г дэмжинэ. </li>
<li><strong>RubyMine</strong> нь үйлдлийн систем голохгүй ажиллахаас гадна нээлттэй эх дээр бичигдсэн ба үнэгүй татан авч суулгаж болохоос гадна сургалтын зориулалтаар ашиглагддаг.</li>
<li><strong>Netbeans Ruby and Rails Plugin</strong> нь NetBean IDE - ын нээлттэй эх дээр суурилсан нэмэлт (plugin) юм.</li>
</ul>


<p>Гэх мэтээр ѳргѳн сонголт байгаа ба ѳѳрийн мэдэх прогаммистуудаас ямар хѳгжүүлэлтийн орчинд ажилладаг болохыг мѳн лавлан асуугаарай.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git (Version Control)]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/git-version-control/"/>
    <updated>2016-01-04T20:50:07+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/git-version-control</id>
    <content type="html"><![CDATA[<p>Version Control - д Github, BitBucket - гээд олон байгаа. Дийлэнх тохиолдолд Git-ыг ашиглана. Git дээр райлс дээр хѳгжүүлэлт хийж байгаа тѳслѳѳ commit хийх ба ѳѳрчлѳлт бүрийг оруулаад тест хийж баталгаатай болгож байгаад commit хийгээд явах юм. Git дээр үүсгэсэн repository-д олон цагийг commit хийх болохоор энэ хэсэг их чухал юм.</p>

<!-- more -->


<p>Багаараа хамтран райлс тѳсѳл дээр ажиллаж байгаа тохиолдолд CI буюу Continuous Integration - ыг сайн шийдсэн байх хэрэгтэй болдог. Ажиллах процесс нь багын гишүүд бүр ѳѳрийн ѳѳрчлѳлтыг repository-д нэмэхээс ѳмнѳ райлс апплейкшнд шинээр хийсэн ѳѳрчлѳлт бүрд тест хийн шалгаад явах юм. Энгийнээр бол багаар ажиллаж байгаа үед алдаатай commit хийсэн тохиолдолд багын ажлыг тэр чигт нь холион бантанд нь хутгадаг, тэр асуудлыг шийдээд ѳгѳх, тѳслийн удирдагч ѳѳрѳѳ хувийн тохиргоо хийж ѳгсѳнѳѳр тѳслийг баллах гэсэн аюулаас нэг алхам холдож чадаж байгаа юм. </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dotfiles]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/dotfiles/"/>
    <updated>2016-01-04T20:46:39+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/dotfiles</id>
    <content type="html"><![CDATA[<p>Терминал харагдах талаас нь ѳѳрчлѳлт хийдэг хүмүүс байхад терминал дээрээ ажил хѳнгѳвчлѳх нэмэлтүүд хийдэг хүмүүс ч бий. Таны хүслээс л хамаарна. Github  дээр хүмүүс ѳѳрсдийнхѳѳ хѳгжүүлэлтийн орчинг dotfile - нэрээр оруулдаг болохоор уг түлхүүр үгээр хайлт хийж сонирхож үзээрэй.</p>

<!-- more -->


<p>Зарим нэг dotfile-ууд:</p>

<ul>
<li>YADR Dotfile: <a href="https://github.com/skwp/dotfiles">https://github.com/skwp/dotfiles</a></li>
<li>Thoughtbot Dotfiles: <a href="https://github.com/thoughtbot/dotfiles">https://github.com/thoughtbot/dotfiles</a></li>
<li>YouCompleteMe |Vim нэмэлт|: <a href="https://github.com/Valloric/YouCompleteMe">https://github.com/Valloric/YouCompleteMe</a></li>
</ul>


<p>Гэх мэтээр хайвал зѳндѳѳ бий.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Command Line]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/command-line/"/>
    <updated>2016-01-04T20:37:57+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/command-line</id>
    <content type="html"><![CDATA[<p>Руби дээр ажиллаж байх үед терминалтай бол байнга ажиллана шүү. Тийм ч болохоор GUI зѳвхѳн Rails application бичиж байгаа бид бүхэнд зориулж хангалттай олон нэмэлтүүдыг гаргасаар байгаа. Хэрвээ терминал дээр ажиллаж мэдэхгүй бол анхан шатны хэдэн коммандуудын үүргийг тайлбарлан бичсэн байгаа. Тогтоогоод авахыг бодоороой, энэ коммандуудыг ер нь ѳдѳр болгон ашиглах болохоор.</p>

<!-- more -->


<h4>SUDO Kомманд</h4>

<p>Дийлэнх комманд нь sudo - оор эхэлдэг. <strong>SUDO</strong> буюу superuserdo нь тухайн роот хэрэглэгчийн бүрэн эрхийг идэвхжүүлэх, тухайн роот хэрэглэгчийн фолдер, файлыг бүрэн эрхтэйгээр удирдах эрх олгож байгаа юм. Sudo коммандыг ашиглах үѳд гараас хэрэглэгчийн нууц үгийг оруулж ѳгѳх ёстой.</p>

<h4>Файл болон Зам (Directory)</h4>

<ol>
<li><p>Долгионтой тэмдэгт (~) ээр home directory-г илэрхийлнэ. Xэрэглэгч буюу user, долгионтой тэмдэгт (~) харагдаж байвал /home/user directory-д байна гэсэн үг.</p></li>
<li><p><strong>pwd</strong>: Энэ коммандын тусламжтайгаар аль directory-д байгаагаа мэдэж болно. Нэг үгээр бол замыг хэвлэн дэлгэцэнд харуулна. Жишээлбэл: Desktop directory дотор pwd комманд бичсэн гэж үзэхэд “~/Desktop” гэснийг терминал дээр хэвлэн харуулах юм. </p></li>
<li><p><strong>ls</strong>: Directory дотор байгаа файлуудын list буюу нэрс, агуулгыг харуулна. ls -ын араас ѳѳр коммандууд ашиглан, тухайн directory дотор байгаа файлуудын хэмжээ, тѳрѳл, үүссэн огноо гэх мэт дэлгэрэнгүй мэдээллийг харах боломж бий.</p></li>
<li><p><strong>cd</strong>: Тухайн directory - чиглэлыг ѳѳрчлѳх, нэг directory-гоос нѳгѳѳ directory уруу орох ерѳнхий үүрэгтэй.
 </p>

<ul>
<li>root directory уруу хандах үѳд “cd /”</li>
<li>home directory уруу хандах үед “cd” эсвэл “cd ~”</li>
<li>Нэг алхамаар урагшлах үѳд “cd ..”</li>
<li>Ѳмнѳх directory уруу буцах үед “cd -”</li>
</ul>
</li>
<li><p><strong>cp</strong>: Файлыг хуулах, copy хийх үүрэг гүйцэтгэнэ. Жишээлбэл: “cp file foo” нь file - хуулах үйлдэл хийн хуулж байгаа файлдаа “foo” нэртэй нэр ѳгч байна. Directory, copy хийх гэж байгаа бол “cp -r directory foo” (рекурс хуулах). Рекурс нь ямар учиртай вэ? Directory-г хуулах үѳд бүх файлуудыг нь хуулах үйлдийг давтах гэх мэтээр…</p></li>
<li><p><strong>mv</strong>: Файлыг ѳѳр байршил уруу шилжүүлэх мѳн нэр ѳѳрчлѳх үүрэгтэй. Жишээлбэл: “mv file foo” нь file - ын нэрийг foo болгон ѳѳрчилж байна. “mv foo ~/Desktop” комманд нь foo нэртэй файлыг Desktop Directory уруу шилжүүлж байна. </p></li>
<li><p><strong>rm</strong>: Энэхүү коммандыг ашиглан файл усгтаж болно. Жишээлбэл: “rm -f user/desktop/foo” нь user-ын Desktop directory-гоос force-оор foo файлыг устгаж байна.</p></li>
<li><p><strong>rmdir</strong>: Хоосон directory-г устгах үед ашиглана. Харин дотроо файл болон контент агуулагдаж байгаа directory-г устгахын тулд “rm -r” коммандыг ашиглана.</p></li>
<li><p><strong>mkdir</strong>: Шинээр directory үүсгэх үүрэгтэй. Жишээлбэл: “mkdir music” нь music нэртэй directory үүсгэж байна.</p></li>
<li><p><strong>man</strong>: Ѳѳр бусад коммандуудын хэрэглэх аргачлал, зааврыг харуулна. Жишээлбэл: “man man” гэж бичихэд man коммандыг үүрэг, хэрхэн ашиглах гэх мэт document гарч ирнэ. </p></li>
<li><p><strong>sudo</strong>: Зѳвхѳн Root user - д зѳвшѳѳрѳл олгох үүрэгтэй. Жишээлбэл: home directory-гын гаднаас файл хуулах шаардлага гарлаа гэж бодоё. “mv /mydoc.odt ~/Documents/mydoc.odt” гэж бичин гэж бодож байвал энэ нь буруу юм. Яагаад гэвэл home directory - гын гаднаас юм оруулах зѳвшѳѳрѳл бидэнд байхгүй байгаад юм. Харин “sudo mv /mydoc.odt ~/Documents/mydoc.odt” гэж бичиж ѳгснѳѳр бүгд хэвийн ажиллана. sudo коммандыг ашиглаж байгаа үѳд болгоомжтой байх нь чухал. Root user - ээр хандаж байгаа үѳд system - ээ ч гэмтээх магадал бий болохоор.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PostgreSQL тохиргоо]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/postgresql-tokhirghoo/"/>
    <updated>2016-01-04T20:33:42+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/postgresql-tokhirghoo</id>
    <content type="html"><![CDATA[<p>Шинэ repository-г нэмж ѳгѳѳд Postgre 9.3 суулгана:</p>

<pre><code>sudo sh -c "echo 'deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main' &gt; /etc/apt/sources.list.d/pgdg.list"
wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | sudo apt-key add -
sudo apt-get update
sudo apt-get install postgresql-common
sudo apt-get install postgresql-9.3 libpq-dev
</code></pre>

<p>Postgre-г суулгах явцад <code>user</code> тохиргоог хийж ѳгѳхгүй. Тийм болохоор дээр зааврын дагуу хийж тохиргоогоо хийгээрэй. <code>chris</code> - оронд ѳѳрийн нэрийг бичин гэж бодох хэрэгтэй.</p>

<pre><code>sudo -u postgres createuser chris -s
# User-т нууц үгтэй хиймээр байна уу? Доорк коммандыг дагаад хийнэ үү.
sudo -u postgres psql
postgres=# \password chris
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL тохиргоо]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/mysql-tokhirghoo/"/>
    <updated>2016-01-04T20:30:44+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/mysql-tokhirghoo</id>
    <content type="html"><![CDATA[<p>MySQL server болон client суулгая:</p>

<pre><code>sudo apt-get install mysql-server mysql-client libmysqlclient-dev
</code></pre>

<p>Суулгах явцад root <code>user</code> - ын нууц үгийг шинээр үүсгэж ѳгнѳ.
<code>libmysqlclient-dev</code> - ыг суулгаж ѳгснѳѳр mysql2 gem - ыг compile хийж Райлс аппд MySQL-ыг холбох тохиргоог хийж ѳгѳх юм.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Райлс болон Ѳгѳгдлийн сан]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/rails-bolon-fghfghdliin-san/"/>
    <updated>2016-01-04T19:59:34+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/rails-bolon-fghfghdliin-san</id>
    <content type="html"><![CDATA[<p>Райлс апплкейшнг ѳѳр database - тэй холбох гэж байгаа бол DB2, MySQL, Oracle, Postgres, Firefird болон SQL Server гэх мэтээр сонголтууд бий. SQLite 3 - ыг Райлс апплкейшнтэй холбож ашиглахын ѳмнѳ database driver суулгаж Library нь Райлсын database engine-тэй холбож ѳгѳх хэрэгтэй.</p>

<!-- more -->


<blockquote><p>Ѳѳрийн хувийн Rails API Documentation үүсгэх</p>

<p>Local орчинд ѳѳрийн Rails API Documentation үүсгэх боломжтой юм.  Маш энгийн, доорх командыг ѳѳрийн терминал дээр бичихэд л хангалттай.</p></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails_apps&gt; rails new dummy_app
</span><span class='line'>rails_apps&gt; cd dumny_app
</span><span class='line'>dumny_app&gt; rake doc:rails</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Хамгийн сүүлд бичсэн мѳр бага зэрэг хугацаа авна. Уншиж дуусмагц, Rails API Documentation нь doc/api гэсэн directory tree үүснэ. Нэг зѳвѳлгѳѳ хэлэхэд уг directory-г ѳѳрийн desktop уруу хуулаад dumnуapp tree -г устгах нь зүйтэй. </p>

<p>Rails API Documentation - хандах бол browser дээрээс doc/apo/index.html хаягаар орох боломжтой. </p></blockquote>

<p>Доорх лкнкүүдыг бид бүхэн ашиглах боломжтой ба дэлгэрэнгүй мэдээллийг тухайн цахим хаягаар орон шалгана уу:</p>

<ul>
<li>DB 2: <a href="http://raa.ruby-lang.org/project/ruby-db2">http://raa.ruby-lang.org/project/ruby-db2</a> эсвэл <a href="http://rubyforge.org/projects/rubyibm">http://rubyforge.org/projects/rubyibm</a></li>
<li>Firebird: <a href="http://rubyforge.org/projects/fireruby/">http://rubyforge.org/projects/fireruby/</a></li>
<li>MySQL: <a href="http://www.tmtm.org/en/mysql/ruby/">http://www.tmtm.org/en/mysql/ruby/</a></li>
<li>Oracle: <a href="http://rubyforge.org/projects/ruby-oci8">http://rubyforge.org/projects/ruby-oci8</a></li>
<li>Postgres: <a href="https://bitbucket.org/ged/ruby-pg/wiki/Home">https://bitbucket.org/ged/ruby-pg/wiki/Home</a></li>
<li>SQL Server: <a href="https://github.com/rails-sqlserver">https://github.com/rails-sqlserver</a></li>
<li>SQLLite: <a href="https://github.com/luislavena/sqlite3-ruby">https://github.com/luislavena/sqlite3-ruby</a></li>
</ul>


<p>Xэрхэн ѳгѳдлийн сан сонгож, тохиргоо хийх вэ?</p>

<p>Райлсын default database нь sqllite3. Sqllite3 нь ашиглахад тохиромжгүй гэж үзэж байгаа бол арай саруул database болох MySQL, PostgreSQL - нарыг ашиглах нь оновчтой шийдэл болно.</p>

<p>Дээрх хоёр нь мэдээлэл, аргачлалын хувьд олдоц ихтэй тул ашиглахад хялбар болов уу.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git тохиргоо]]></title>
    <link href="http://cadil.github.io/blog/2016/01/03/git/"/>
    <updated>2016-01-03T22:05:13+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/03/git</id>
    <content type="html"><![CDATA[<h3>Git for Ubuntu</h3>

<p>Git-ыг сая суулгасан Руби 2.2.3-ын удирдах систем хэлбэрээр ашиглана . Тиймээс ѳѳрийн github аккоунттайгаа холбох хэрэгтэй. Аккоунт байхгүй бол <a href="https://github.com">Github</a> - орж бүртгүүлээрэй.</p>

<!-- more -->


<p><code>YOUR NAME</code>, <code>YOUR@EMAIL.COM</code> оронд ѳѳрийн нэр, майл хаягаа бичнэ.</p>

<pre><code>git config --global color.ui true
git config --global user.name "YOUR NAME"
git config --global user.email "YOUR@EMAIL.com"
ssh-keygen -t rsa -C "YOUR@EMAIL.com"
</code></pre>

<p>Шинээр үүссэн <code>SSH key</code> - ыг ѳѳрийн <code>github account</code> - д хуулж ѳгнѳ. Copy хийсэн бол SSH Key-ээ <a href="https://github.com/settings/ssh">энд</a> хуулна.</p>

<pre><code>cat ~/.ssh/id_rsa.pub
</code></pre>

<p>Хуулсан бол ажиллаж байгаа эсэхийг нь check хийж үзье:</p>

<pre><code>ssh -T git@github.com
</code></pre>

<p>Ийм message гарч ирэх ёстой.</p>

<pre><code>Hi excid3! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails Setup]]></title>
    <link href="http://cadil.github.io/blog/2016/01/03/ruby-on-rails-setup/"/>
    <updated>2016-01-03T21:22:17+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/03/ruby-on-rails-setup</id>
    <content type="html"><![CDATA[<h1>Руби суулгах [2.2.3]</h1>

<pre><code>sudo apt-get update
sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev
</code></pre>

<p>Эхллэд зарим шаардлагатай зүйлсийг суулгана.
Ruby-г суулгах үндсэндээ 3 арга байдаг. Тус бүр ѳѳр ѳѳрийн гэсэн давуу талуудтай.</p>

<ul>
<li>rbenv</li>
<li>rvm</li>
<li>from source</li>
</ul>


<p>Хамгийн recommended арга нь rbenv, rvm хоёр юм. Энэ удаа <code>rbenv</code> аргаар ruby-г суулгана.
Rbenv арга нь энгийн хоёр алхамтай. Эхлээд <code>rbenv</code>-гээ суулгаад дараа нь <code>ruby-build</code> - ээ суулгана:</p>

<pre><code>cd
git clone git://github.com/sstephenson/rbenv.git .rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; ~/.bashrc
echo 'eval "$(rbenv init -)"' &gt;&gt; ~/.bashrc
exec $SHELL

git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' &gt;&gt; ~/.bashrc
exec $SHELL

git clone https://github.com/sstephenson/rbenv-gem-rehash.git ~/.rbenv/plugins/rbenv-gem-rehash

rbenv install 2.2.3
rbenv global 2.2.3
ruby -v
</code></pre>

<p>Rubygems - ыг илүү дутуу documentation-гүйгээр суулгана:</p>

<pre><code>echo "gem: --no-ri --no-rdoc" &gt; ~/.gemrc
gem install bundler
</code></pre>

<h1>Rails суулгах [4.2.4]</h1>

<p>Rails суулгахын ѳмнѳ <code>NodeJS</code> суулгана:</p>

<pre><code>curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -
sudo apt-get install -y nodejs
</code></pre>

<p>Rails суулгая:</p>

<pre><code>gem install rails -v 4.2.4
</code></pre>

<p>Rails суусан эсэхийг шалгах:</p>

<pre><code>rbenv rehash
</code></pre>

<p>Rails -v коммандыг ашиглан яг бүрэн суусан эсэхийг шалгая:</p>

<pre><code>rails -v
# Rails 4.2.4
</code></pre>
]]></content>
  </entry>
  
</feed>
