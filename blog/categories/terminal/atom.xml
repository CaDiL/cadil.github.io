<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: terminal | CaDiL's blog]]></title>
  <link href="http://cadil.github.io/blog/categories/terminal/atom.xml" rel="self"/>
  <link href="http://cadil.github.io/"/>
  <updated>2016-01-05T01:15:29+08:00</updated>
  <id>http://cadil.github.io/</id>
  <author>
    <name><![CDATA[CaDiL]]></name>
    <email><![CDATA[kkhoschuluu@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dotfiles]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/dotfiles/"/>
    <updated>2016-01-04T20:46:39+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/dotfiles</id>
    <content type="html"><![CDATA[<p>Терминал харагдах талаас нь ѳѳрчлѳлт хийдэг хүмүүс байхад терминал дээрээ ажил хѳнгѳвчлѳх нэмэлтүүд хийдэг хүмүүс ч бий. Таны хүслээс л хамаарна. Github  дээр хүмүүс ѳѳрсдийнхѳѳ хѳгжүүлэлтийн орчинг dotfile - нэрээр оруулдаг болохоор уг түлхүүр үгээр хайлт хийж сонирхож үзээрэй.</p>

<!-- more -->


<p>Зарим нэг dotfile-ууд:</p>

<ul>
<li>YADR Dotfile: <a href="https://github.com/skwp/dotfiles">https://github.com/skwp/dotfiles</a></li>
<li>Thoughtbot Dotfiles: <a href="https://github.com/thoughtbot/dotfiles">https://github.com/thoughtbot/dotfiles</a></li>
<li>YouCompleteMe |Vim нэмэлт|: <a href="https://github.com/Valloric/YouCompleteMe">https://github.com/Valloric/YouCompleteMe</a></li>
</ul>


<p>Гэх мэтээр хайвал зѳндѳѳ бий.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Command Line]]></title>
    <link href="http://cadil.github.io/blog/2016/01/04/command-line/"/>
    <updated>2016-01-04T20:37:57+08:00</updated>
    <id>http://cadil.github.io/blog/2016/01/04/command-line</id>
    <content type="html"><![CDATA[<p>Руби дээр ажиллаж байх үед терминалтай бол байнга ажиллана шүү. Тийм ч болохоор GUI зѳвхѳн Rails application бичиж байгаа бид бүхэнд зориулж хангалттай олон нэмэлтүүдыг гаргасаар байгаа. Хэрвээ терминал дээр ажиллаж мэдэхгүй бол анхан шатны хэдэн коммандуудын үүргийг тайлбарлан бичсэн байгаа. Тогтоогоод авахыг бодоороой, энэ коммандуудыг ер нь ѳдѳр болгон ашиглах болохоор.</p>

<!-- more -->


<h4>SUDO Kомманд</h4>

<p>Дийлэнх комманд нь sudo - оор эхэлдэг. <strong>SUDO</strong> буюу superuserdo нь тухайн роот хэрэглэгчийн бүрэн эрхийг идэвхжүүлэх, тухайн роот хэрэглэгчийн фолдер, файлыг бүрэн эрхтэйгээр удирдах эрх олгож байгаа юм. Sudo коммандыг ашиглах үѳд гараас хэрэглэгчийн нууц үгийг оруулж ѳгѳх ёстой.</p>

<h4>Файл болон Зам (Directory)</h4>

<ol>
<li><p>Долгионтой тэмдэгт (~) ээр home directory-г илэрхийлнэ. Xэрэглэгч буюу user, долгионтой тэмдэгт (~) харагдаж байвал /home/user directory-д байна гэсэн үг.</p></li>
<li><p><strong>pwd</strong>: Энэ коммандын тусламжтайгаар аль directory-д байгаагаа мэдэж болно. Нэг үгээр бол замыг хэвлэн дэлгэцэнд харуулна. Жишээлбэл: Desktop directory дотор pwd комманд бичсэн гэж үзэхэд “~/Desktop” гэснийг терминал дээр хэвлэн харуулах юм. </p></li>
<li><p><strong>ls</strong>: Directory дотор байгаа файлуудын list буюу нэрс, агуулгыг харуулна. ls -ын араас ѳѳр коммандууд ашиглан, тухайн directory дотор байгаа файлуудын хэмжээ, тѳрѳл, үүссэн огноо гэх мэт дэлгэрэнгүй мэдээллийг харах боломж бий.</p></li>
<li><p><strong>cd</strong>: Тухайн directory - чиглэлыг ѳѳрчлѳх, нэг directory-гоос нѳгѳѳ directory уруу орох ерѳнхий үүрэгтэй.
 </p>

<ul>
<li>root directory уруу хандах үѳд “cd /”</li>
<li>home directory уруу хандах үед “cd” эсвэл “cd ~”</li>
<li>Нэг алхамаар урагшлах үѳд “cd ..”</li>
<li>Ѳмнѳх directory уруу буцах үед “cd -”</li>
</ul>
</li>
<li><p><strong>cp</strong>: Файлыг хуулах, copy хийх үүрэг гүйцэтгэнэ. Жишээлбэл: “cp file foo” нь file - хуулах үйлдэл хийн хуулж байгаа файлдаа “foo” нэртэй нэр ѳгч байна. Directory, copy хийх гэж байгаа бол “cp -r directory foo” (рекурс хуулах). Рекурс нь ямар учиртай вэ? Directory-г хуулах үѳд бүх файлуудыг нь хуулах үйлдийг давтах гэх мэтээр…</p></li>
<li><p><strong>mv</strong>: Файлыг ѳѳр байршил уруу шилжүүлэх мѳн нэр ѳѳрчлѳх үүрэгтэй. Жишээлбэл: “mv file foo” нь file - ын нэрийг foo болгон ѳѳрчилж байна. “mv foo ~/Desktop” комманд нь foo нэртэй файлыг Desktop Directory уруу шилжүүлж байна. </p></li>
<li><p><strong>rm</strong>: Энэхүү коммандыг ашиглан файл усгтаж болно. Жишээлбэл: “rm -f user/desktop/foo” нь user-ын Desktop directory-гоос force-оор foo файлыг устгаж байна.</p></li>
<li><p><strong>rmdir</strong>: Хоосон directory-г устгах үед ашиглана. Харин дотроо файл болон контент агуулагдаж байгаа directory-г устгахын тулд “rm -r” коммандыг ашиглана.</p></li>
<li><p><strong>mkdir</strong>: Шинээр directory үүсгэх үүрэгтэй. Жишээлбэл: “mkdir music” нь music нэртэй directory үүсгэж байна.</p></li>
<li><p><strong>man</strong>: Ѳѳр бусад коммандуудын хэрэглэх аргачлал, зааврыг харуулна. Жишээлбэл: “man man” гэж бичихэд man коммандыг үүрэг, хэрхэн ашиглах гэх мэт document гарч ирнэ. </p></li>
<li><p><strong>sudo</strong>: Зѳвхѳн Root user - д зѳвшѳѳрѳл олгох үүрэгтэй. Жишээлбэл: home directory-гын гаднаас файл хуулах шаардлага гарлаа гэж бодоё. “mv /mydoc.odt ~/Documents/mydoc.odt” гэж бичин гэж бодож байвал энэ нь буруу юм. Яагаад гэвэл home directory - гын гаднаас юм оруулах зѳвшѳѳрѳл бидэнд байхгүй байгаад юм. Харин “sudo mv /mydoc.odt ~/Documents/mydoc.odt” гэж бичиж ѳгснѳѳр бүгд хэвийн ажиллана. sudo коммандыг ашиглаж байгаа үѳд болгоомжтой байх нь чухал. Root user - ээр хандаж байгаа үѳд system - ээ ч гэмтээх магадал бий болохоор.</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
