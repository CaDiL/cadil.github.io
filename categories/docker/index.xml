<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on CaDiL&#39;s Blog</title>
    <link>https://cadil.github.io/categories/docker/</link>
    <description>Recent content in Docker on CaDiL&#39;s Blog</description>
    <image>
      <title>CaDiL&#39;s Blog</title>
      <url>https://cadil.github.io/static</url>
      <link>https://cadil.github.io/static</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>mn</language>
    <lastBuildDate>Thu, 18 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://cadil.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Thinkpad R500-д Almalinux 8 OS &#43; Docker &#43; Nginx proxy manager &#43; SSL certificate &#43; DuckDNS</title>
      <link>https://cadil.github.io/posts/2024-01-18-docker-thinkpadr500/</link>
      <pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2024-01-18-docker-thinkpadr500/</guid>
      <description>Nginx Proxy Manager &#43; DuckDNS &#43; Containers</description>
      <content:encoded><![CDATA[<h4 id="os">OS</h4>
<p>Almalinux 8.9 minimal <a href="https://mirrors.almalinux.org/isos/x86_64/8.9.html">ISO</a> суулгасан. Суулгах явцад root-с тусад нь user үүсгэн wheel группд нэмсэн.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># hostnamectl</span>
</span></span><span style="display:flex;"><span>         Icon name: computer-laptop
</span></span><span style="display:flex;"><span>           Chassis: laptop
</span></span><span style="display:flex;"><span>  Operating System: AlmaLinux 8.9 <span style="color:#f92672">(</span>Midnight Oncilla<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>       CPE OS Name: cpe:/o:almalinux:almalinux:8::baseos
</span></span><span style="display:flex;"><span>            Kernel: Linux 4.18.0-513.9.1.el8_9.x86_64
</span></span><span style="display:flex;"><span>      Architecture: x86-64
</span></span><span style="display:flex;"><span><span style="color:#75715e"># lshw</span>
</span></span><span style="display:flex;"><span>    vendor: LENOVO
</span></span><span style="display:flex;"><span>    version: ThinkPad R500
</span></span><span style="display:flex;"><span>    cpu: Celeron<span style="color:#f92672">(</span>R<span style="color:#f92672">)</span> Dual-Core CPU T3100 @ 1.90GHz
</span></span><span style="display:flex;"><span>    ram: 8G DDR2 800MHz
</span></span></code></pre></div><h4 id="docker--docker-compose">Docker &amp; docker compose</h4>
<p>Суулгах</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo dnf upgrade
</span></span><span style="display:flex;"><span>sudo dnf install yum-utils
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>sudo dnf install docker-ce docker-ce-cli containerd.io docker-compose-plugin
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Complete бол сервис асаана</span>
</span></span><span style="display:flex;"><span>sudo systemctl start docker
</span></span><span style="display:flex;"><span>sudo systemctl enable docker
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># check version</span>
</span></span><span style="display:flex;"><span>docker --version
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Docker version 24.0.7, build afdd53b</span>
</span></span><span style="display:flex;"><span>docker-compose --version
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Docker Compose version v2.12.2</span>
</span></span></code></pre></div><p>Compose ажиллахгүй бол энэ аргаар суулгана:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl -L <span style="color:#e6db74">&#34;https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-</span><span style="color:#66d9ef">$(</span>uname -s<span style="color:#66d9ef">)</span><span style="color:#e6db74">-</span><span style="color:#66d9ef">$(</span>uname -m<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> -o /usr/bin/docker-compose
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>chmod +x /usr/bin/docker-compose
</span></span></code></pre></div><p>Non root user бол docker group үүсгээд sudo үүсгэх боломжтой болгоорой.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Add alma user to wheel group</span>
</span></span><span style="display:flex;"><span>sudo usermod -aG wheel alma
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Add alma user to docker group</span>
</span></span><span style="display:flex;"><span>sudo usermod -aG docker alma
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># groups</span>
</span></span><span style="display:flex;"><span>alma wheel docker
</span></span><span style="display:flex;"><span><span style="color:#75715e"># id</span>
</span></span><span style="display:flex;"><span>uid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>alma<span style="color:#f92672">)</span> gid<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>alma<span style="color:#f92672">)</span> groups<span style="color:#f92672">=</span>1000<span style="color:#f92672">(</span>alma<span style="color:#f92672">)</span>,10<span style="color:#f92672">(</span>wheel<span style="color:#f92672">)</span>,992<span style="color:#f92672">(</span>docker<span style="color:#f92672">)</span>
</span></span></code></pre></div><h4 id="docker-compose">Docker compose</h4>
<p><code>nginxproxymanager</code>, <code>nextcloud</code>, <code>homeassistant</code>, <code>jellyfin</code>, <code>odoo+postgres</code> docker compose бүрдэнэ. Nginx proxy manager дээр HTTPS (Let&rsquo;s encrypt) авахад бас DuckDNS domain авахад ашиглана. Docker network-оо дундаа ашиглана. 3 port docker -с host руу 80, 81, 443 expose хийсэн.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#f92672">version</span>: <span style="color:#e6db74">&#39;2.2&#39;</span> 
</span></span><span style="display:flex;"><span><span style="color:#f92672">services</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">nginxproxymanager</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">image</span>: <span style="color:#e6db74">&#39;jc21/nginx-proxy-manager:latest&#39;</span> 
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">nginxproxymanager</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped </span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">ports</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;80:80&#39;</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;81:81&#39;</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;443:443&#39;</span> 
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">volumes</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./nginx/data:/data</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./nginx/letsencrypt:/etc/letsencrypt</span>
</span></span><span style="display:flex;"><span>      <span style="color:#75715e"># default cred: admin@example.com, changeme</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">nextcloud</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">lscr.io/linuxserver/nextcloud:latest</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">nextcloud</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PUID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PGID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">TZ=Asia/Ulaanbaatar</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">volumes</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./nextcloud/appdata:/config </span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./nextcloud/data:/data</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped </span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">homeassistant</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">lscr.io/linuxserver/homeassistant:latest</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">homeassistant </span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PUID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PGID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">TZ=Asia/Ulaanbaatar</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">volumes</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./hass/config:/config </span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">jellyfin</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">lscr.io/linuxserver/jellyfin:latest</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">jellyfin </span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PUID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PGID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">TZ=Asia/Ulaanbaatar</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">volumes</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./jellyfin/config:/config</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./jellyfin/tvshows:/data/tvshows</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./jellyfin/movies:/data/movies </span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped</span>
</span></span><span style="display:flex;"><span>    
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">postgresql</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">docker.io/bitnami/postgresql:16</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">postgresql</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PUID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PGID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">TZ=Asia/Ulaanbaatar</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">ALLOW_EMPTY_PASSWORD=yes</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">POSTGRESQL_USERNAME=bn_odoo</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">POSTGRESQL_DATABASE=bitnami_odoo</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">volumes</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./postgresql/postgresql-persistence:/bitnami/postgresql</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">odoo</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">image</span>: <span style="color:#ae81ff">docker.io/bitnami/odoo:17</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">container_name</span>: <span style="color:#ae81ff">odoo</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">environment</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PUID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">PGID=1000</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">TZ=Asia/Ulaanbaatar</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">ALLOW_EMPTY_PASSWORD=yes</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">ODOO_DATABASE_HOST=postgresql</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">ODOO_DATABASE_PORT_NUMBER=5432</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">ODOO_DATABASE_USER=bn_odoo</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">ODOO_DATABASE_NAME=bitnami_odoo</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">volumes</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">./odoo/odoo-persistence:/bitnami/odoo</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">depends_on</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#ae81ff">postgresql</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">restart</span>: <span style="color:#ae81ff">unless-stopped</span>
</span></span><span style="display:flex;"><span>    <span style="color:#75715e"># default cred: user@example.com, bitnami</span>
</span></span></code></pre></div><p>docker ps</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>CONTAINER ID   IMAGE                                      COMMAND                  CREATED       STATUS       PORTS                                                                                  NAMES
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>e6609eb542bd   bitnami/odoo:17                            <span style="color:#e6db74">&#34;/opt/bitnami/script…&#34;</span>   <span style="color:#ae81ff">5</span> hours ago   Up <span style="color:#ae81ff">5</span> hours   3000/tcp, 8069/tcp, 8072/tcp                                                           odoo
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>58afb26eb6ce   lscr.io/linuxserver/nextcloud:latest       <span style="color:#e6db74">&#34;/init&#34;</span>                  <span style="color:#ae81ff">5</span> hours ago   Up <span style="color:#ae81ff">5</span> hours   80/tcp, 443/tcp                                                                        nextcloud
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>dc45338ecfa2   lscr.io/linuxserver/homeassistant:latest   <span style="color:#e6db74">&#34;/init&#34;</span>                  <span style="color:#ae81ff">5</span> hours ago   Up <span style="color:#ae81ff">5</span> hours   8123/tcp                                                                               homeassistant
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>e0798c155a37   bitnami/postgresql:16                      <span style="color:#e6db74">&#34;/opt/bitnami/script…&#34;</span>   <span style="color:#ae81ff">5</span> hours ago   Up <span style="color:#ae81ff">5</span> hours   5432/tcp                                                                               postgresql
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>9c57715192a9   jc21/nginx-proxy-manager:latest            <span style="color:#e6db74">&#34;/init&#34;</span>                  <span style="color:#ae81ff">5</span> hours ago   Up <span style="color:#ae81ff">5</span> hours   0.0.0.0:80-81-&gt;80-81/tcp, :::80-81-&gt;80-81/tcp, 0.0.0.0:443-&gt;443/tcp, :::443-&gt;443/tcp   nginxproxymanager
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>26b9483c3e2d   lscr.io/linuxserver/jellyfin:latest        <span style="color:#e6db74">&#34;/init&#34;</span>                  <span style="color:#ae81ff">5</span> hours ago   Up <span style="color:#ae81ff">5</span> hours   8096/tcp, 8920/tcp                                                                     jellyfin
</span></span></code></pre></div><h4 id="port-нээх">Port нээх</h4>
<p>docker expose хийсэн портуудыг хост талдаа нээнэ.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Host port нээх</span>
</span></span><span style="display:flex;"><span>sudo firewall-cmd --zone<span style="color:#f92672">=</span>public --add-service<span style="color:#f92672">=</span>http --permanent
</span></span><span style="display:flex;"><span>sudo firewall-cmd --zone<span style="color:#f92672">=</span>public --add-port 8080/tcp --permanent
</span></span><span style="display:flex;"><span><span style="color:#75715e"># reload хийх</span>
</span></span><span style="display:flex;"><span>sudo firewall-cmd --reload
</span></span><span style="display:flex;"><span><span style="color:#75715e"># port шалгах</span>
</span></span><span style="display:flex;"><span>sudo firewall-cmd --zone<span style="color:#f92672">=</span>public --list-ports
</span></span></code></pre></div><h3 id="host-д-persist-хийгдсэн-volume">Host-д persist хийгдсэн volume</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e">#pwd</span>
</span></span><span style="display:flex;"><span>/home/alma/docker/compose
</span></span><span style="display:flex;"><span><span style="color:#75715e">#ls -la -d * */*</span>
</span></span><span style="display:flex;"><span>-rw-rw-r--. <span style="color:#ae81ff">1</span> alma             alma <span style="color:#ae81ff">2022</span> Jan <span style="color:#ae81ff">18</span> 00:59 docker-compose.yml
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">3</span> root             root   <span style="color:#ae81ff">20</span> Jan  <span style="color:#ae81ff">6</span> 01:49 hass
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">8</span> alma             alma <span style="color:#ae81ff">4096</span> Jan <span style="color:#ae81ff">18</span> 01:21 hass/config
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">5</span> root             root   <span style="color:#ae81ff">49</span> Jan  <span style="color:#ae81ff">6</span> 01:49 jellyfin
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">6</span> alma             alma  <span style="color:#ae81ff">179</span> Jan <span style="color:#ae81ff">16</span> 09:28 jellyfin/config
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">2</span> alma             alma <span style="color:#ae81ff">4096</span> Jan <span style="color:#ae81ff">14</span> 07:43 jellyfin/movies
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">4</span> alma             alma   <span style="color:#ae81ff">54</span> Jan <span style="color:#ae81ff">14</span> 07:43 jellyfin/tvshows
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">4</span> root             root   <span style="color:#ae81ff">33</span> Jan  <span style="color:#ae81ff">6</span> 01:49 nextcloud
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">7</span> alma             alma   <span style="color:#ae81ff">95</span> Jan  <span style="color:#ae81ff">6</span> 02:30 nextcloud/appdata
</span></span><span style="display:flex;"><span>drwxrwx---. <span style="color:#ae81ff">5</span> alma             alma  <span style="color:#ae81ff">158</span> Jan <span style="color:#ae81ff">18</span> 06:30 nextcloud/data
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">4</span> root             root   <span style="color:#ae81ff">37</span> Jan  <span style="color:#ae81ff">6</span> 01:49 nginx
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">7</span> root             root  <span style="color:#ae81ff">137</span> Jan <span style="color:#ae81ff">18</span> 06:02 nginx/data
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">8</span> root             root  <span style="color:#ae81ff">104</span> Jan <span style="color:#ae81ff">18</span> 06:02 nginx/letsencrypt
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">3</span> root             root   <span style="color:#ae81ff">30</span> Jan <span style="color:#ae81ff">17</span> 23:28 odoo
</span></span><span style="display:flex;"><span>drwxrwxr-x. <span style="color:#ae81ff">5</span> systemd-coredump root   <span style="color:#ae81ff">44</span> Jan <span style="color:#ae81ff">18</span> 01:01 odoo/odoo-persistence
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">3</span> root             root   <span style="color:#ae81ff">36</span> Jan <span style="color:#ae81ff">18</span> 00:54 postgresql
</span></span><span style="display:flex;"><span>drwxr-xr-x. <span style="color:#ae81ff">3</span>             <span style="color:#ae81ff">1001</span> <span style="color:#ae81ff">1001</span>   <span style="color:#ae81ff">18</span> Jan <span style="color:#ae81ff">18</span> 00:58 postgresql/postgresql-persistence
</span></span></code></pre></div><p>non-root container-н хувьд permission алдаа заавал, жишээ нь postgresql:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo chown -R 1001:1001 postgresql/postgresql-persistence
</span></span></code></pre></div><p>Jellyfin library-гаа sync хийж чадахгүй байвал:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>sudo chown -R alma:alma movies
</span></span><span style="display:flex;"><span>sudo chmod -R <span style="color:#ae81ff">755</span> movies <span style="color:#75715e">#tvshows</span>
</span></span></code></pre></div><h3 id="nginx-proxy-manager">Nginx proxy manager</h3>
<p><code>http://server-ip:81</code> хандан default creds-р (<code>admin@example.com</code> pass: <code>changeme</code>) нэвтэрнэ. Дараа нь <a href="https://duckdns.org/">DuckDNS</a> бүртгүүлээд sub domain (жишээ нь <code>hosono</code>.duckdns.org г.м) авна. <code>Current IP</code> хэсэгт host-н IP (192.168.1.200 г.м) save хийнэ дээд хэсэгт <code>token</code> -copy хийнэ.</p>
<p>Nginx proxy manager -&gt; SSL Certificate -&gt; Add Let&rsquo;s Encrypt Certificate -&gt;  Let&rsquo;s Encrypt орон Domain Names хэсэгт DuckDNS авсан domain-аа (<code>*.hosono.duckdns.org</code> болон <code>hosono.duckdns.org</code>) оруулна. Email хэсэгт мэдэгдэл авах мэйл хаягаа оруулна. Use a DNS Challenge -г enable хийгээд <code>DuckDNS</code> сонгоод <code>dns_duckdns_token=өмнө copy хийсэн token-oo энд paste хийнэ</code>. Propagation Seconds хэсэгт <code>120</code> гэж бичээд save. Алдаа заавал дахин save хийнэ.</p>
<h4 id="proxy-entry">Proxy entry</h4>
<p><code>hosono.duckdns.org</code> -г <code>http://nginxproxymanager:81</code>
<code>jellyfin.hosono.duckdns.org</code> -г <code>http://jellyfin:8096</code> гэх мэтээр Certificate тохируулахад Proxy host-ууд бүртгэнэ.</p>
<p>Domain Names хэсэгт бүртгэж буй sub domain-аа бичин, Scheme хэсэгт <code>http</code> <code>https</code> -с сонгоно. container талаас 443 default хийгдээгүй л бол ихэхндээ <code>http</code> -г сонгоно.  Forward Hostname / IP хэсэгт container name эсхүл 127.0.0.1 байж болно.</p>
<p>SSL хэсэгт SSL Certificate -д бүртгэсэн DuckDNS -с сонгоод Force SSL, HTTP/2 Support гэдгийг сонгоод хадаглах юм. Энэ мэтээр subdomain -уудаа бүртгэнэ.</p>
<table>
<thead>
<tr>
<th>SOURCE</th>
<th>DESTINATION</th>
<th>SSL</th>
<th>ACCESS</th>
<th>STATUS</th>
</tr>
</thead>
<tbody>
<tr>
<td>home.hosono.duckdns.org</td>
<td>http://homeassistant:8123</td>
<td>Let&rsquo;s Encrypt</td>
<td>Public</td>
<td>Online</td>
</tr>
<tr>
<td>hosono.duckdns.org</td>
<td>http://nginxproxymanager:81</td>
<td>Let&rsquo;s Encrypt</td>
<td>Public</td>
<td>Online</td>
</tr>
<tr>
<td>jellyfin.hosono.duckdns.org</td>
<td>http://jellyfin:8096</td>
<td>Let&rsquo;s Encrypt</td>
<td>Public</td>
<td>Online</td>
</tr>
<tr>
<td>nextcloud.hosono.duckdns.org</td>
<td>https://nextcloud:443</td>
<td>Let&rsquo;s Encrypt</td>
<td>Public</td>
<td>Online</td>
</tr>
<tr>
<td>odoo.hosono.duckdns.org</td>
<td>http://odoo:8069</td>
<td>Let&rsquo;s Encrypt</td>
<td>Public</td>
<td>Online</td>
</tr>
</tbody>
</table>
<h5 id="ha">HA</h5>
<p>http://homeassistant:8123 хувьд Proxy бүртгэх дээ Websockets Supports гэдгийг чагтлан өгнө. Дараа нь npm ажиллаж байгаа IP хаягийн мэдээллийг аван HASS дотор configuration.yml -г trusted_proxy хэсэгт npm нэмэн оруулна</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker inspect nginxproxymanager
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span><span style="color:#e6db74">&#34;IPAddress&#34;</span>: <span style="color:#e6db74">&#34;172.23.0.2&#34;</span>
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># /home/alma/docker/compose/hass/config</span>
</span></span><span style="display:flex;"><span>vi configuration.yaml
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span>http:
</span></span><span style="display:flex;"><span>  use_x_forwarded_for: true
</span></span><span style="display:flex;"><span>  trusted_proxies:
</span></span><span style="display:flex;"><span>    - 172.23.0.0/24
</span></span><span style="display:flex;"><span>  <span style="color:#75715e"># - 172.23.0.5</span>
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><h3 id="watchtower">Watchtower</h3>
<p>Гараар container-ууд update хийнэ.
/Docker-compose дотор байнга ажилладаг байхаар тохируулж бас болно/</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker run -v /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once
</span></span></code></pre></div><h3 id="bookmarks">Bookmarks</h3>
<ul>
<li><a href="https://youtu.be/qlcVx-k-02E">https://youtu.be/qlcVx-k-02E</a></li>
<li><a href="https://notthebe.ee/blog/easy-ssl-in-homelab-dns01/">https://notthebe.ee/blog/easy-ssl-in-homelab-dns01/</a></li>
<li><a href="https://github.com/bitnami/containers/tree/main/bitnami/odoo#configuration">https://github.com/bitnami/containers/tree/main/bitnami/odoo#configuration</a></li>
<li><a href="https://linux.how2shout.com/how-to-open-or-close-ports-in-almalinux-8-or-rocky-firewall/">https://linux.how2shout.com/how-to-open-or-close-ports-in-almalinux-8-or-rocky-firewall/</a></li>
<li><a href="https://techoverflow.net/2020/01/28/how-to-fix-bitnami-mariadb-mkdir-cannot-create-directory-bitnami-mariadb-permission-denied/">https://techoverflow.net/2020/01/28/how-to-fix-bitnami-mariadb-mkdir-cannot-create-directory-bitnami-mariadb-permission-denied/</a></li>
<li><a href="https://github.com/containrrr/watchtower/discussions/901">https://github.com/containrrr/watchtower/discussions/901</a></li>
<li><a href="https://containrrr.dev/watchtower/">https://containrrr.dev/watchtower/</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Odoo -г Docker-с ажилууллах</title>
      <link>https://cadil.github.io/posts/2020-12-25-docker-compose/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2020-12-25-docker-compose/</guid>
      <description>Odoo -г Docker-с ажилууллах</description>
      <content:encoded><![CDATA[<h3 id="odoo--г-docker-с-ажилууллах">Odoo -г Docker-с ажилууллах</h3>
<ul>
<li><code>Odoo</code> -н тухай</li>
<li><a href="https://bitnami.com">Bitnami</a>-г ашиглан <a href="https://github.com/bitnami/bitnami-docker-odoo">Bitnami-docker-odoo</a> - ажилууллах</li>
<li><code>docker-compose</code> - коммандын талаар</li>
<li>Docker Volume &amp; persistent volume claim талаар</li>
<li>Docker-compouse ажилууллах</li>
</ul>
<h3 id="odoohttpsgithubcomodooodoo-н-тухайд"><a href="https://github.com/odoo/odoo">Odoo</a>-н тухайд</h3>
<p>Нээлттэй эх дээрх бизнес апплкэйшн <a href="https://en.wikipedia.org/wiki/Enterprise_resource_planning">ERP</a> нь вэб дээр бүрэн ажиллах, ѳѳр системтэй интеграци хийх боломж, <a href="https://en.wikipedia.org/wiki/Internationalization_and_localization">l10n</a> зэргийг шийдсэн цогц апплкэйшн юм.</p>
<h3 id="bitnamihttpsgithubcombitnami-н-тухайд"><a href="https://github.com/bitnami">Bitnami</a>-н тухайд</h3>
<p>Нээлттэй эх дээр суурьтай <a href="https://en.wikipedia.org/wiki/Open-source_software">OSS</a> софтвейрыг хялбар аргаар хүссэн орчин дээр суулган ажилуулна. Клоуд хостинг хийж байгаа бол Helm Chart -г ашиглан күбэрнетес, клустер-г хялбархан тохируулна. Гэхдээ күбэрнетес, клустертэй ажиллаж байгаа үед гарын авлага, документ, тест зэргийг сайтар судалсны дараа турших хэрэгтэй.</p>
<h3 id="docker-compose">Docker Compose</h3>
<p>Compose нь нэгээс олон контейнеруудыг нэг дор ажилууллах үед <a href="https://en.wikipedia.org/wiki/YAML">YAML</a> файл дотор тохируулсан бүтцийг ашиглан докер ажиллах процесс юм.</p>
<p>Докэр Compose үндсэн бүтэц:</p>
<ul>
<li><code>Dockerfile</code></li>
<li><code>docker-compose.yml</code> - апплкэйшн тус бүрийн бүтцийг тодорхойлох хэсэг. Файл дотор байгаа бүтцийн дагуу апплкэйшн серверүүдийг асааж тусгаарлагдсан орчин үүсгэнэ.</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>version: <span style="color:#e6db74">&#39;2&#39;</span>
</span></span><span style="display:flex;"><span>services:
</span></span><span style="display:flex;"><span> postgresql:
</span></span><span style="display:flex;"><span>   image: <span style="color:#e6db74">&#39;docker.io/bitnami/postgresql:11-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>   environment:
</span></span><span style="display:flex;"><span>     - ALLOW_EMPTY_PASSWORD<span style="color:#f92672">=</span>yes
</span></span><span style="display:flex;"><span>   volumes:
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;postgresql_data:/bitnami/postgresql&#39;</span>
</span></span><span style="display:flex;"><span> odoo:
</span></span><span style="display:flex;"><span>   image: <span style="color:#e6db74">&#39;docker.io/bitnami/odoo:14-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>   ports:
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;80:8069&#39;</span>
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;443:8071&#39;</span>
</span></span><span style="display:flex;"><span>   volumes:
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;odoo_data:/bitnami&#39;</span>
</span></span><span style="display:flex;"><span>   depends_on:
</span></span><span style="display:flex;"><span>     - postgresql
</span></span><span style="display:flex;"><span>volumes:
</span></span><span style="display:flex;"><span> postgresql_data:
</span></span><span style="display:flex;"><span>   driver: local
</span></span><span style="display:flex;"><span> odoo_data:
</span></span><span style="display:flex;"><span>   driver: local
</span></span></code></pre></div><p>Bitnami дах Odoo V14-н сервер, апплкэйшнг тодорхойлж байгаа docker-compose.yml -г задалж үзвэл <a href="https://github.com/bitnami/bitnami-docker-postgresql"><code>postgresql</code></a>, <code>odoo</code> гэсэн хоёр контейнераас <code>services</code> бүрдэж байна.</p>
<ul>
<li><code>ALLOW_EMPTY_PASSWORD=yes</code> - ѳгѳгдлийн санг нууц үггүйгээр хандалт хийдэг болгож байна (тест хийж байгаа үед тохиромжтой). Продакшн орчинд тохиромжгүй сонголт.</li>
<li><code>ports</code> - [host-port]:[container-port] Хостинг портыг <code>80</code>, <code>443</code> контейнер дэх <code>8069</code>, <code>8071</code> порттой холбож байна. CLI - рүү бичвэл:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker run -p 80:8069 --name odoo
</span></span></code></pre></div><ul>
<li><code>depends_on</code> - Compose хийхдээ эхлээд postgresql тодорхойлсон байна. Үүний дараа Odoo-г тохируулж байна. Ингэснээр ялгаатай хоёр контейнерээс хамааралтай байх нѳхцлийг тодорхойлж ѳгнѳ. Ѳѳрѳѳр хэлбэл нетворкинг хийж байгаа үед дарааллыг тодорхойлж ѳгѳх ба Odoo асахаас ѳмнѳ нь заавал Postgresql ассан байх ёстойг compose-д сануулж байна гэж хэлж болох юм.</li>
<li><code>volumes</code> - compose хийгдэж байгаа YAML-г CLI -руу хѳрвүүлбэл:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker volume create --driver local --name postgresql_data
</span></span><span style="display:flex;"><span>$ docker volume create --driver local --name odoo_data
</span></span></code></pre></div><p>буюу [Докэр хост] дотор odoo_data, postgresql_data гэсэн нэртэй local volume үүсгэж ѳгнѳ. Докэр хост-г дэлгэрүүлбэл:</p>
<p>Докэр ажиллах бүтэц нь Docker Engine тѳвтэй ба дараах гурван хэсгээс бүрдэнэ.</p>
<ul>
<li>Docker daemon - Docker API хүсэлтүүд хүлээн авч image, container, network, volume - зэргийн зохион байгуулалт хийх, бусад Docker Service-үүдтэй deamon -ѳѳр дамжин холбогдох гэх мэт.</li>
<li>Docker CLI (Command Line Interface)</li>
<li>REST API - Клиенттай холбогдох, Docker deamon-той уялдан харилцана.</li>
</ul>
<p>Ѳѳрѳѳр хэлбэл докэр дотор ажиллаж байгааг image-с тусад нь volume үүсгэн ѳгч байна. Ингэснээр тухайн контейнер унтарсан ч дата персист тѳлѳвтэй дахин ашиглаж болно гэсэн юм. &ndash;driver гэдэг нь Докэр plugin ашиглаад зѳвхѳн Докэр роот-с хандалт хийх эрх локал volume үүсгэж байна. Датаг холбох ѳѳр нэг арга нь docker-compose дотор хостинг directory-г оноох боломжтой. Гэхдээ non-root хэрэглэгчийн хувьд харгалзах хандах эрх байгааг нягтлан шалгах хэрэгтэй. Жишээ нь хост direcory-г тодорхойж буй:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volumes:
</span></span><span style="display:flex;"><span>  - <span style="color:#e6db74">&#39;odoo_data:/bitnami&#39;</span> <span style="color:#75715e">#Docker Host-с дотор тодорхойлсон volume.</span>
</span></span><span style="display:flex;"><span>  - <span style="color:#e6db74">&#39;./extra-addons:/bitnami/odoo/addons&#39;</span> <span style="color:#75715e"># Хост directory-г Container руу оруулж байна.</span>
</span></span></code></pre></div><p><code>odoo_data:/bitnami</code> дотор Odoo-г ажиллаж байх үеийн filestore -д Docker Host дотор <code>odoo_data</code> volume-д үүснэ. Docker volume руу зѳвхѳн Docker hosting хийж байгаа root хэрэглэгч хандах боломжтойг анхаарна уу.</p>
<p><code>./extra-addons:/bitnami/odoo/addons</code> - ./extra-addons, directory -г Odoo контейнер дах /bitnami/odoo/addons руу оруулж байна. Ингэснээр гуравдагч эдгээдийн модиуль болон хѳгжүүлэлтийн орчин дах нэмэлт модиулыг суулган ажиллуулах боломжтой болно.</p>
<p><code>/bitnami/odoo/addons</code>-г conf файл дотор тодорхойлж ѳгсѳн эсэхийг шалгах:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker exec -it &lt;container-name&gt; cat /opt/bitnami/odoo/odoo-server.conf
</span></span></code></pre></div><p>Bitnami -г дах Dockerfile болон нэмэлт pkg суух үед Odoo-гийн коор модиулидын directory болон нэмэлтээр суулгах модиулын directory-г тодорхойлон .conf файлд тохируулсан байгааг харж болно.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#f92672">[</span>options<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>addons_path <span style="color:#f92672">=</span> /opt/bitnami/odoo/odoo/addons,/opt/bitnami/odoo/addons
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p>docker-compose.yml - файл сүүлийн байдлаар:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>version: <span style="color:#e6db74">&#39;2&#39;</span>
</span></span><span style="display:flex;"><span>services:
</span></span><span style="display:flex;"><span>  postgresql:
</span></span><span style="display:flex;"><span>    image: <span style="color:#e6db74">&#39;docker.io/bitnami/postgresql:11-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>    environment:
</span></span><span style="display:flex;"><span>      - ALLOW_EMPTY_PASSWORD<span style="color:#f92672">=</span>yes
</span></span><span style="display:flex;"><span>    volumes:
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;postgresql_data:/bitnami/postgresql&#39;</span>
</span></span><span style="display:flex;"><span>  odoo:
</span></span><span style="display:flex;"><span>    image: <span style="color:#e6db74">&#39;docker.io/bitnami/odoo:14-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>    ports:
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;80:8069&#39;</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;443:8071&#39;</span>
</span></span><span style="display:flex;"><span>    volumes:
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;odoo_data:/bitnami&#39;</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;./extra-addons:/bitnami/odoo/addons&#39;</span>
</span></span><span style="display:flex;"><span>    depends_on:
</span></span><span style="display:flex;"><span>      - postgresql
</span></span><span style="display:flex;"><span>volumes:
</span></span><span style="display:flex;"><span>  postgresql_data:
</span></span><span style="display:flex;"><span>    driver: local
</span></span><span style="display:flex;"><span>  odoo_data:
</span></span><span style="display:flex;"><span>    driver: local
</span></span></code></pre></div><p><a href="https://github.com/CaDiL/docker-101/tree/main/bitnami-odoo">Бүтэц:</a></p>
<pre tabindex="0"><code>...
# tree
/bitnami-odoo/
|-- extra-addons
|-- docker-compose.yml
...
</code></pre><h3 id="docker-compose-ажилууллах">Docker-compose ажилууллах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker-compose up -d
</span></span></code></pre></div><p>Image-үүд татаж дуусан networking хийн done болсон бол:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>Status: Downloaded newer image <span style="color:#66d9ef">for</span> bitnami/odoo:14-debian-10
</span></span><span style="display:flex;"><span>Creating bitnami-odoo_postgresql_1 ... <span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>Creating bitnami-odoo_odoo_1       ... <span style="color:#66d9ef">done</span>
</span></span></code></pre></div><p><code>http://localhost/web/login</code> хаягаар хандан bitnami -с тодорхойлсон нэвтрэх нэр: <a href="mailto:user@example.com">user@example.com</a> нууц үг: bitnami, Odoo руу нэвтрэн орно. Эсхүл шинээр db тохируулах бол &lsquo;<code>http://localhost/web/database/selector</code> - хаягаар орон тохируулж болно.</p>
<h3 id="docker-compose-унтраах">Docker-compose унтраах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker-compose down
</span></span></code></pre></div><h3 id="volume-шалгах">Volume шалгах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker volume ls
</span></span></code></pre></div><h3 id="volume-устгах">Volume устгах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker volume rm &lt;volume-name&gt;
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>Localhost дээр Nginx ажилууллах</title>
      <link>https://cadil.github.io/posts/2020-12-21-nginx-container/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2020-12-21-nginx-container/</guid>
      <description>Localhost дээр Nginx ажилууллах</description>
      <content:encoded><![CDATA[<h1 id="localhost-дээр-nginx-ажилууллах">Localhost дээр Nginx ажилууллах</h1>
<p>Локалхост дээр Nignx вэбсервер асаах</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker run -d -p 80:80 --name webserver nginx
</span></span></code></pre></div><p>Коммандын ажиллаж буй зарчим:</p>
<ul>
<li><a href="https://docs.docker.com/engine/reference/commandline/cli/"><code>docker</code></a> - Докэр ачааллах үндсэн комманд.</li>
<li><a href="https://docs.docker.com/engine/reference/run/"><code>run</code></a> - Контейнер ажлууллна.</li>
<li><a href="https://docs.docker.com/engine/reference/run/#detached--d"><code>-d</code></a> - Контейнерыг салангид тѳлѳвтэйгээр ажиллуулна. Процесс (веб-сервер) зогсвол контейнер мѳн зогсоно.</li>
<li><a href="https://docs.docker.com/engine/reference/commandline/run/#publish-or-expose-port--p---expose"><code>-p 80:80</code></a> - Хостинг портыг <code>80</code> контейнер дэх <code>80</code> порттой [host-port]:[container-port] холбох үед ашиглана.</li>
<li>[<code>--name</code>] - Контейнерт нэр онооно.</li>
<li><code>nginx</code> - Локал дээр ийм нэртэй repo байгаа эсэхийг шалгаад байхгүй бол Docker Hub - аас <a href="https://hub.docker.com/_/nginx/"><code>nginx</code></a> image - татаж авна. Tag - ыг тодорхой бичиж ѳгѳѳгүй бол хамгийн сүүлийн хувилбар буюу <code>nginx:latest</code> - татаж авна.</li>
</ul>
<p>Дээрх комманд ажиллаж дуусан бол browser-с <code>http://localhost:80/</code> - хандан Nginx -д ажиллаж байгааг шалгаарай.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu контейнер ажилууллах</title>
      <link>https://cadil.github.io/posts/2020-12-21-ubuntu-container/</link>
      <pubDate>Mon, 21 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2020-12-21-ubuntu-container/</guid>
      <description>Ubuntu контейнер ажилууллах</description>
      <content:encoded><![CDATA[<h2 id="ubuntu-контейнер-ажилууллах">Ubuntu контейнер ажилууллах</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker run ubuntu
</span></span></code></pre></div><h3 id="ubuntu-контейнер-руу-shell--ээр-хандах">Ubuntu контейнер руу shell -ээр хандах</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker run -ti &lt;your-container-name&gt; /bin/bash 
</span></span></code></pre></div><p>Эсвэл:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker exec -ti &lt;your-container-name&gt; bash
</span></span></code></pre></div><blockquote>
<p><strong>Note</strong>: shell-с гарахдаа Ctrl + D</p>
</blockquote>
<h3 id="ажиллаж-байгаа-контейнер-инспект-хийх-inspecting">Ажиллаж байгаа контейнер инспект хийх (inspecting)</h3>
<p>Контейнер нэрийг тодорхойлох.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker ps -a
</span></span></code></pre></div><p>Контейнер нэрийг ашиглан инспект хийх.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker inspect &lt;your-container-name&gt;
</span></span></code></pre></div><h3 id="ip-хаяг-тодорхойлох">IP хаяг тодорхойлох</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker inspect &lt;your-container-name&gt; | grep IPAddress
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker inspect --format <span style="color:#f92672">{{</span>.NetworkSettings.IPAddress<span style="color:#f92672">}}</span> &lt;your-container-name&gt;
</span></span></code></pre></div><h3 id="лог-шалгах">Лог шалгах</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker logs &lt;your-container-name&gt;
</span></span></code></pre></div><h3 id="контейнер-зогсоох">Контейнер зогсоох</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker stop &lt;your-container-name&gt;
</span></span></code></pre></div><h3 id="ажиллаагүй-байгаа-контейнер-цэвэрлэх-clean-up">Ажиллаагүй байгаа контейнер цэвэрлэх (clean up)</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker rm -v <span style="color:#66d9ef">$(</span>docker ps -aq -f states<span style="color:#f92672">=</span>exited<span style="color:#66d9ef">)</span>
</span></span></code></pre></div>]]></content:encoded>
    </item>
    <item>
      <title>Докэр контейнр болон Виртуалчлал</title>
      <link>https://cadil.github.io/posts/2020-12-16-docker-container/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2020-12-16-docker-container/</guid>
      <description>Докэр контейнр болон Виртуалчлал</description>
      <content:encoded><![CDATA[<h1 id="виртуалчлал">Виртуалчлал</h1>
<p><strong>Виртуал машин</strong>: Софтвейр контейнр дотор (үйлдлийн систем + апплкэйшнг) салангид бүтэцтэй ажиллуулна. Нэг физик серверт олон вирутал машин (ВМ) ажилуулах боломжтой.
<a href="https://en.wikipedia.org/wiki/Hypervisor">Гипервизор</a> (Виртуал машин мониторинг ВММ)
Виртуал машин бүрийн нѳѳцийг тооцоолж динамик хуваарилалт хийнэ.</p>
<p><strong>Контейнр</strong>: Хѳнгѳн байх бүтэцтэй виртуалчлал (контейнэр) нэг хостинг дотор ажиллах боломж. Үйлдлийн системээс ялгаатай нь кернел байхгүй. Хостинг хийж байгаа машины кернелийг хуваалцаж ашиглана (Илүү хѳнгѳн бүцэтэй болгох гэж тэр). Контейнр хоорондын тусгаарлалт хийхдээ <a href="https://en.wikipedia.org/wiki/Process_isolation">процесс тѳлѳвт тусгаарлалт</a> ашиглана.</p>
<h2 id="докэр-контейнр">Докэр контейнр</h2>
<p>Линукс контейнр (LXC) - с үүдэлтэй. LXC нь нэг хостинг дээр олон Линукс систем ажлууллах үйлдийн систем суурт виртуал аргачлал юм. Namespace, cgroup -ээр дамжих замаар LXC ажиллана. Докэр эхэн үедээ сингл-апплкэйшн LXC контейрн болгож LXC өөрчлөлт шинэчлэл хийгдэх болгонд илүү уян хатан,  зѳѳвѳрлѳх боломжтой болсон.</p>
<figure>
    <img loading="lazy" src="/images/Docker_Container_001.png"/> 
</figure>

<p><strong>Docker</strong> нь кодыг нэмэлтүүдийн хамт image дотор байрлуулна. Нээлттэй эх дээрх багаж</p>
<figure>
    <img loading="lazy" src="/images/Docker_Container_002.png"/> 
</figure>

]]></content:encoded>
    </item>
    <item>
      <title>Жишээ контейнер ажилуулах (hello-world)</title>
      <link>https://cadil.github.io/posts/2020-12-17-hello-world-container/</link>
      <pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2020-12-17-hello-world-container/</guid>
      <description>Жишээ контейнер ажилуулах (hello-world)</description>
      <content:encoded><![CDATA[<h1 id="жишээ-контейнер-ажилуулах">Жишээ контейнер ажилуулах</h1>
<p><a href="https://docs.docker.com/engine/install/">Докэр суулгах</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker run hello-world
</span></span></code></pre></div><p>Docker run командаар контейнер дуудаж ажиллуулна.</p>
<p>hello-world нэртэй image-г локалаас хайж үзнэ. Хэрэв ийм нэртэй image олдохгүй бол <a href="https://hub.docker.com">Dockerhub</a>-аас адил нэртэй <a href="https://hub.docker.com/_/hello-world/">image</a>-г хайн ажиллуулна.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>Hello from Docker!
</span></span><span style="display:flex;"><span>This message shows that your installation appears to be working correctly.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>To generate this message, Docker took the following steps:
</span></span><span style="display:flex;"><span> 1. The Docker client contacted the Docker daemon.
</span></span><span style="display:flex;"><span> 2. The Docker daemon pulled the <span style="color:#e6db74">&#34;hello-world&#34;</span> image from the Docker Hub.
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">(</span>amd64<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span> 3. The Docker daemon created a new container from that image which runs the
</span></span><span style="display:flex;"><span>    executable that produces the output you are currently reading.
</span></span><span style="display:flex;"><span> 4. The Docker daemon streamed that output to the Docker client, which sent it
</span></span><span style="display:flex;"><span>    to your terminal.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>To try something more ambitious, you can run an Ubuntu container with:
</span></span><span style="display:flex;"><span> $ docker run -it ubuntu bash
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Share images, automate workflows, and more with a free Docker ID:
</span></span><span style="display:flex;"><span> https://hub.docker.com/
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>For more examples and ideas, visit:
</span></span><span style="display:flex;"><span> https://docs.docker.com/get-started/
</span></span></code></pre></div><h2 id="контейнер-ажиллаж-байгаа-эсэхийг-шалгах">Контейнер ажиллаж байгаа эсэхийг шалгах</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker ps
</span></span></code></pre></div><blockquote>
<p><strong>Note</strong>: Үр дүнд ажиллаж байгаа контейнер лист буцаахгүй буюу хоосон утга буцаавал контейнер ажиллаж дуусаад зогссон байна.</p>
</blockquote>
<h2 id="сүүлийн-байдлаар-ажиллаж-байсан-контейнер-шалгах">Сүүлийн байдлаар ажиллаж байсан контейнер шалгах</h2>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker ps -l
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>CONTAINER ID   IMAGE         COMMAND    CREATED         STATUS                     PORTS     NAMES
</span></span><span style="display:flex;"><span>562a70b66077   hello-world   <span style="color:#e6db74">&#34;/hello&#34;</span>   <span style="color:#ae81ff">8</span> minutes ago   Exited <span style="color:#f92672">(</span>0<span style="color:#f92672">)</span> <span style="color:#ae81ff">8</span> minutes ago             zealous_feynman
</span></span></code></pre></div>]]></content:encoded>
    </item>
  </channel>
</rss>
