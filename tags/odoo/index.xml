<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Odoo on CaDiL&#39;s Blog</title>
    <link>https://cadil.github.io/tags/odoo/</link>
    <description>Recent content in Odoo on CaDiL&#39;s Blog</description>
    <image>
      <title>CaDiL&#39;s Blog</title>
      <url>https://cadil.github.io/static</url>
      <link>https://cadil.github.io/static</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>mn</language>
    <lastBuildDate>Thu, 14 Jan 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://cadil.github.io/tags/odoo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GKE дээр Odoo-г суулгах</title>
      <link>https://cadil.github.io/posts/2021-01-14-gke-kubernetes/</link>
      <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2021-01-14-gke-kubernetes/</guid>
      <description>GKE дээр Odoo-г суулгах</description>
      <content:encoded><![CDATA[<h2 id="gke-дээр-helm-күбернетес-ашиглан-жишээ-апплкейшн-суулгаж-тохируулах">GKE дээр Helm, Күбернетес ашиглан жишээ апплкейшн суулгаж тохируулах</h2>
<ul>
<li>Google Kubernetes Engine дээр кластер үүсгэх</li>
<li>Helm, Tiller суулгах</li>
<li>TLS Key үүсгэх</li>
<li>Odoo-г суулгах</li>
</ul>
<h3 id="google-kubernetes-engine-дээр-кластер-үүсгэх">Google Kubernetes Engine дээр кластер үүсгэх</h3>
<p><a href="https://cloud.google.com">Google Cloud Platform</a> дээр Google Kubernetes Engine дээр кластер үүсгэх Helm Chart суулгаж TLS, Cert-Manager суулган тохируулж сүүлд нь Odoo-г суулгаж үзнэ.</p>
<ul>
<li><a href="https://cloud.google.com/sdk/docs/install">gcloud суулгах</a></li>
<li><a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl">kubectl суулгах</a></li>
</ul>
<p><code>gcloud</code> дамжуулан GCP - тэй холбогдоно. Google Cloud Platform - бүртгэл байхгүй бол эхлээд бүртгүүлээрэй.</p>
<p><code>kubectl</code> gcloud суулгасан бол дээр байгаа гарын авлага ашиглахгүй kubectl суулгая гэвэл:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>gcloud components install kubectl
</span></span></code></pre></div><p>Кластер үүсгэхээсээ ѳмнѳ нэвтрэн орно:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>gcloud auth application-default login
</span></span></code></pre></div><p>Нэвтрэн орсон бол доорк коммандараар шинэ прожект үүсгэнэ:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>gcloud projects create <span style="color:#e6db74">${</span>PROJECT<span style="color:#e6db74">}</span>
</span></span></code></pre></div><p>Эсхүл заавал CLI-ээр үүсгэхгүй гэвэл GCP дээрээс browser дээрээс орон шинэ прожект үүсгэж болно. Терминал дээрээ ѳѳрийн тѳслийг default болгож zone тохиргоо хийх бол:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>gcloud config set project <span style="color:#e6db74">${</span>PROJECT<span style="color:#e6db74">}</span> 
</span></span><span style="display:flex;"><span>gcloud config set compute/zone <span style="color:#e6db74">${</span>ZONE<span style="color:#e6db74">}</span>
</span></span></code></pre></div><blockquote>
<p><strong>Zone жигсаалт авах бол</strong>: gcloud compute zones list</p>
</blockquote>
<p>Одоо шинээр үүсгэсэн тѳсѳл дотроо кластер үүсгэе. Google Kubernetes Engine -г идэвхжүүлээгүй бол эхлээд brwoser-ѳѳсѳѳ GCP -г ороод GKE-г enable хийх хийнэ. Kubernetes Engine -г ороод browser дээрээс анх удаа кластер үүсгэж байгаа хичээл болон жишиг кластер тохироог санал болгоно. Тэр аргаар нь үүсгэж болно. Эсхүл доор байгаа командаар үүсгэж болно.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>gcloud beta container --project <span style="color:#e6db74">${</span>PROJECT<span style="color:#e6db74">}</span> clusters create <span style="color:#e6db74">&#34;my-first-cluster-1&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --zone <span style="color:#e6db74">&#34;us-central1-c&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --no-enable-basic-auth <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --cluster-version <span style="color:#e6db74">&#34;1.16.15-gke.4901&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --machine-type <span style="color:#e6db74">&#34;e2-medium&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --image-type <span style="color:#e6db74">&#34;COS&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --disk-type <span style="color:#e6db74">&#34;pd-standard&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --disk-size <span style="color:#e6db74">&#34;100&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --scopes <span style="color:#e6db74">&#34;https://www.googleapis.com/auth/devstorage.read_only&#34;</span>,<span style="color:#e6db74">&#34;https://www.googleapis.com/auth/logging.write&#34;</span>,<span style="color:#e6db74">&#34;https://www.googleapis.com/auth/monitoring&#34;</span>,<span style="color:#e6db74">&#34;https://www.googleapis.com/auth/servicecontrol&#34;</span>,<span style="color:#e6db74">&#34;https://www.googleapis.com/auth/service.management.readonly&#34;</span>,<span style="color:#e6db74">&#34;https://www.googleapis.com/auth/trace.append&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --no-enable-cloud-logging <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --no-enable-cloud-monitoring <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --no-enable-ip-alias <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --network <span style="color:#e6db74">&#34;projects/</span><span style="color:#e6db74">${</span>PROJECT<span style="color:#e6db74">}</span><span style="color:#e6db74">/global/networks/default&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --subnetwork <span style="color:#e6db74">&#34;projects/</span><span style="color:#e6db74">${</span>PROJECT<span style="color:#e6db74">}</span><span style="color:#e6db74">/regions/us-central1/subnetworks/default&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --addons HorizontalPodAutoscaling <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --enable-autoupgrade <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --enable-autorepair <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --enable-autoscaling <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --num-nodes <span style="color:#e6db74">&#34;2&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --min-nodes <span style="color:#e6db74">&#34;2&#34;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --max-nodes <span style="color:#e6db74">&#34;5&#34;</span>
</span></span></code></pre></div><p><code>zones</code>: Кластер үүсгэж байгаа сервверийн байршил.
<code>machine-type</code>: Кластерын үүсгэж байгаа тѳхѳѳрѳмжийн сонголт. Ямар тѳрлийн тѳхѳѳрѳмж сонгхож байгаагаас үнэ болон хэдэн node үүсгэх лимит зэрэгг тодорохйлогдоно. Дэлгэрэнгүй судлах бол: <a href="https://cloud.google.com/compute/docs/machine-types">Machine Types</a>.
<code>addons</code>: Автоматаар буюу ачаалал их болох үед node ѳргѳтгѳл хийх тохиргоо оруулав: <a href="https://cloud.google.com/kubernetes-engine/docs/how-to/horizontal-pod-autoscaling">HorizontalPodAutoscaling</a>.
<code>min-node</code>: Автомат ѳргѳтгѳл хийж байх үед кластерт хамгийн бага байх node.
<code>max-node</code>: Автомат ѳргѳтгѳл хийж байх үед кластерт хамгийн их байх node.</p>
<p>Шинээр үүсгэсэн кластерт role binding тохируулна:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>gcloud container clusters get-credentials <span style="color:#e6db74">${</span>Кластер нэр<span style="color:#e6db74">}</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>kubectl create clusterrolebinding cluster-admin-binding <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --clusterrole cluster-admin <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --user <span style="color:#66d9ef">$(</span>gcloud config get-value account<span style="color:#66d9ef">)</span>
</span></span></code></pre></div><h3 id="helm-суулгах">Helm суулгах</h3>
<p>Helm суулгах:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>curl https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl create serviceaccount -n kube-system tiller 
</span></span><span style="display:flex;"><span>kubectl create clusterrolebinding tiller-cluster-rule <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  --clusterrole<span style="color:#f92672">=</span>cluster-admin --serviceaccount<span style="color:#f92672">=</span>kube-system:tiller
</span></span></code></pre></div><p>to be continued&hellip;</p>
]]></content:encoded>
    </item>
    <item>
      <title>Helm Chart ашиглан Odoo-г локал орчинд суулгах</title>
      <link>https://cadil.github.io/posts/2021-01-13-kubernetes-with-odoo/</link>
      <pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2021-01-13-kubernetes-with-odoo/</guid>
      <description>Helm Chart ашиглан Odoo-г локал орчинд суулгах</description>
      <content:encoded><![CDATA[<p><a href="https://github.com/helm/helm">Kubernetes Helm</a>-г ашиглан <a href="https://bitnami.com/">bitnami</a> тохируулсан апплкэйшнг Күбернетесд суулган үзье. Ингэснээр Күбернетес ажиллагааг энгийн хялбар аргаар харж туршиж болно.</p>
<p><code>minikube start</code>-г терминал дээр бичин күбернетэс кластераа ажилууллсан бол:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e"># Bitnami Helm Chart рэпо-г эхлээд нэмнэ.</span>
</span></span><span style="display:flex;"><span>$ helm repo add bitnami https://charts.bitnami.com/bitnami
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Default namespace-т my-release - нэрэээр Odoo-г суулгана.</span>
</span></span><span style="display:flex;"><span>$ helm install my-release bitnami/odoo
</span></span></code></pre></div><p>Дээрх коммандууыг ажиллуусан бол output терминал дээр харуулна.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>NAME: my-release
</span></span><span style="display:flex;"><span>LAST DEPLOYED: ***
</span></span><span style="display:flex;"><span>NAMESPACE: default
</span></span><span style="display:flex;"><span>STATUS: deployed
</span></span><span style="display:flex;"><span>REVISION: <span style="color:#ae81ff">1</span>
</span></span><span style="display:flex;"><span>TEST SUITE: None
</span></span><span style="display:flex;"><span>NOTES:
</span></span><span style="display:flex;"><span>*******************************************************************
</span></span><span style="display:flex;"><span>*** PLEASE BE PATIENT: Odoo may take a few minutes to install   ***
</span></span><span style="display:flex;"><span>*******************************************************************
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>1. Get the Odoo URL by running:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>** Please ensure an external IP is associated to the my-release-odoo service before proceeding **
</span></span><span style="display:flex;"><span>** Watch the status using: kubectl get svc --namespace default -w my-release-odoo **
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  export SERVICE_IP<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>kubectl get svc --namespace default my-release-odoo --template <span style="color:#e6db74">&#34;{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}&#34;</span><span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>  echo <span style="color:#e6db74">&#34;Odoo URL: http://</span>$SERVICE_IP<span style="color:#e6db74">/&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>2. Obtain the login credentials
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  export ODOO_EMAIL<span style="color:#f92672">=</span>user@example.com
</span></span><span style="display:flex;"><span>  export ODOO_PASSWORD<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>kubectl get secret --namespace default my-release-odoo -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;{.data.odoo-password}&#34;</span> | base64 --decode<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>  echo Email   : $ODOO_EMAIL
</span></span><span style="display:flex;"><span>  echo Password: $ODOO_PASSWORD
</span></span></code></pre></div><p>Output нь ойлгоход хялбар энгийн зааварчилгаа байгаа, терминал дээр зааврын дагуу хуулж ажилууллна.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get svc --namespace default -w my-release-odoo
</span></span></code></pre></div><p>Сервисын статусыг дээрх коммандаар харах боломжтой гэж output дээр тайлбарлсан байгаа. Гэхдээ локал орчинд minikube ашиглаж байгаа үед Load Balancer-н экстернал ip -г авч болохгүй шалтгаан нь Cloud Provider-ууд дээр байдаг шиг Minikube -д ѳѳрт нь Load Balancer layer - байхгүй.</p>
<p>Тиймээс minikube-д экстернал ip-г түр зүүр нээх хэрэгтэй болно. Доор байгаа коммандыг шинэ терминал нээгээд ажилууллна.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>minikube tunnel
</span></span></code></pre></div><p>Ажилуулах үед нууц үг асууна. Нууц үг хийснээр локал орчинд Load Balancer шинээр үүсгэнэ.</p>
<p>Эсхүл service.type -г <code>LoadBalancer</code> биш <code>NodePort</code> болгоод ажилуулах бас нэг арга бий. Жишээ нь:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>helm install odoo bitnami/odoo --set serviceType<span style="color:#f92672">=</span>NodePort
</span></span></code></pre></div><p><code>kubectl get svc --namespace default -w my-release-odoo</code> - г коммандыг дахин ажилууллаад үзээрэй. Экстернал IP хэсгийг тодорхойлсон байгаа. Одоо <code>SERVICE_IP</code> -г browser дээр хуулаад done.</p>
<h3 id="под-статус-шалгах">Под статус шалгах</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>kubectl get pods
</span></span></code></pre></div><h3 id="release-устгаж-цэвэрлэх">release устгаж цэвэрлэх</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>helm uninstall my-release
</span></span></code></pre></div><p>Сервисийн параметруудыг ѳѳрчлѳх конфиг хийх бол <a href="https://github.com/bitnami/charts/tree/master/bitnami/odoo#service-parameters">эндээс</a> харж болох юм байна. Ѳѳр олон тохихруулга байгаа  болохоор <a href="https://github.com/bitnami/charts/tree/master/bitnami/odoo">заавартай</a> нь танилцаад аваарай.</p>
<h3 id="сурвалжууд--bookmarks">Сурвалжууд &amp; Bookmarks:</h3>
<ul>
<li><a href="https://github.com/helm/helm">https://github.com/helm/helm</a></li>
<li><a href="https://github.com/bitnami/charts">https://github.com/bitnami/charts</a></li>
<li><a href="https://github.com/bitnami/charts/tree/master/bitnami/odoo">https://github.com/bitnami/charts/tree/master/bitnami/odoo</a></li>
<li><a href="https://docs.bitnami.com/kubernetes/get-started-kubernetes/">https://docs.bitnami.com/kubernetes/get-started-kubernetes/</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Odoo -г Docker-с ажилууллах</title>
      <link>https://cadil.github.io/posts/2020-12-25-docker-compose/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://cadil.github.io/posts/2020-12-25-docker-compose/</guid>
      <description>Odoo -г Docker-с ажилууллах</description>
      <content:encoded><![CDATA[<h3 id="odoo--г-docker-с-ажилууллах">Odoo -г Docker-с ажилууллах</h3>
<ul>
<li><code>Odoo</code> -н тухай</li>
<li><a href="https://bitnami.com">Bitnami</a>-г ашиглан <a href="https://github.com/bitnami/bitnami-docker-odoo">Bitnami-docker-odoo</a> - ажилууллах</li>
<li><code>docker-compose</code> - коммандын талаар</li>
<li>Docker Volume &amp; persistent volume claim талаар</li>
<li>Docker-compouse ажилууллах</li>
</ul>
<h3 id="odoohttpsgithubcomodooodoo-н-тухайд"><a href="https://github.com/odoo/odoo">Odoo</a>-н тухайд</h3>
<p>Нээлттэй эх дээрх бизнес апплкэйшн <a href="https://en.wikipedia.org/wiki/Enterprise_resource_planning">ERP</a> нь вэб дээр бүрэн ажиллах, ѳѳр системтэй интеграци хийх боломж, <a href="https://en.wikipedia.org/wiki/Internationalization_and_localization">l10n</a> зэргийг шийдсэн цогц апплкэйшн юм.</p>
<h3 id="bitnamihttpsgithubcombitnami-н-тухайд"><a href="https://github.com/bitnami">Bitnami</a>-н тухайд</h3>
<p>Нээлттэй эх дээр суурьтай <a href="https://en.wikipedia.org/wiki/Open-source_software">OSS</a> софтвейрыг хялбар аргаар хүссэн орчин дээр суулган ажилуулна. Клоуд хостинг хийж байгаа бол Helm Chart -г ашиглан күбэрнетес, клустер-г хялбархан тохируулна. Гэхдээ күбэрнетес, клустертэй ажиллаж байгаа үед гарын авлага, документ, тест зэргийг сайтар судалсны дараа турших хэрэгтэй.</p>
<h3 id="docker-compose">Docker Compose</h3>
<p>Compose нь нэгээс олон контейнеруудыг нэг дор ажилууллах үед <a href="https://en.wikipedia.org/wiki/YAML">YAML</a> файл дотор тохируулсан бүтцийг ашиглан докер ажиллах процесс юм.</p>
<p>Докэр Compose үндсэн бүтэц:</p>
<ul>
<li><code>Dockerfile</code></li>
<li><code>docker-compose.yml</code> - апплкэйшн тус бүрийн бүтцийг тодорхойлох хэсэг. Файл дотор байгаа бүтцийн дагуу апплкэйшн серверүүдийг асааж тусгаарлагдсан орчин үүсгэнэ.</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>version: <span style="color:#e6db74">&#39;2&#39;</span>
</span></span><span style="display:flex;"><span>services:
</span></span><span style="display:flex;"><span> postgresql:
</span></span><span style="display:flex;"><span>   image: <span style="color:#e6db74">&#39;docker.io/bitnami/postgresql:11-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>   environment:
</span></span><span style="display:flex;"><span>     - ALLOW_EMPTY_PASSWORD<span style="color:#f92672">=</span>yes
</span></span><span style="display:flex;"><span>   volumes:
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;postgresql_data:/bitnami/postgresql&#39;</span>
</span></span><span style="display:flex;"><span> odoo:
</span></span><span style="display:flex;"><span>   image: <span style="color:#e6db74">&#39;docker.io/bitnami/odoo:14-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>   ports:
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;80:8069&#39;</span>
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;443:8071&#39;</span>
</span></span><span style="display:flex;"><span>   volumes:
</span></span><span style="display:flex;"><span>     - <span style="color:#e6db74">&#39;odoo_data:/bitnami&#39;</span>
</span></span><span style="display:flex;"><span>   depends_on:
</span></span><span style="display:flex;"><span>     - postgresql
</span></span><span style="display:flex;"><span>volumes:
</span></span><span style="display:flex;"><span> postgresql_data:
</span></span><span style="display:flex;"><span>   driver: local
</span></span><span style="display:flex;"><span> odoo_data:
</span></span><span style="display:flex;"><span>   driver: local
</span></span></code></pre></div><p>Bitnami дах Odoo V14-н сервер, апплкэйшнг тодорхойлж байгаа docker-compose.yml -г задалж үзвэл <a href="https://github.com/bitnami/bitnami-docker-postgresql"><code>postgresql</code></a>, <code>odoo</code> гэсэн хоёр контейнераас <code>services</code> бүрдэж байна.</p>
<ul>
<li><code>ALLOW_EMPTY_PASSWORD=yes</code> - ѳгѳгдлийн санг нууц үггүйгээр хандалт хийдэг болгож байна (тест хийж байгаа үед тохиромжтой). Продакшн орчинд тохиромжгүй сонголт.</li>
<li><code>ports</code> - [host-port]:[container-port] Хостинг портыг <code>80</code>, <code>443</code> контейнер дэх <code>8069</code>, <code>8071</code> порттой холбож байна. CLI - рүү бичвэл:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker run -p 80:8069 --name odoo
</span></span></code></pre></div><ul>
<li><code>depends_on</code> - Compose хийхдээ эхлээд postgresql тодорхойлсон байна. Үүний дараа Odoo-г тохируулж байна. Ингэснээр ялгаатай хоёр контейнерээс хамааралтай байх нѳхцлийг тодорхойлж ѳгнѳ. Ѳѳрѳѳр хэлбэл нетворкинг хийж байгаа үед дарааллыг тодорхойлж ѳгѳх ба Odoo асахаас ѳмнѳ нь заавал Postgresql ассан байх ёстойг compose-д сануулж байна гэж хэлж болох юм.</li>
<li><code>volumes</code> - compose хийгдэж байгаа YAML-г CLI -руу хѳрвүүлбэл:</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker volume create --driver local --name postgresql_data
</span></span><span style="display:flex;"><span>$ docker volume create --driver local --name odoo_data
</span></span></code></pre></div><p>буюу [Докэр хост] дотор odoo_data, postgresql_data гэсэн нэртэй local volume үүсгэж ѳгнѳ. Докэр хост-г дэлгэрүүлбэл:</p>
<p>Докэр ажиллах бүтэц нь Docker Engine тѳвтэй ба дараах гурван хэсгээс бүрдэнэ.</p>
<ul>
<li>Docker daemon - Docker API хүсэлтүүд хүлээн авч image, container, network, volume - зэргийн зохион байгуулалт хийх, бусад Docker Service-үүдтэй deamon -ѳѳр дамжин холбогдох гэх мэт.</li>
<li>Docker CLI (Command Line Interface)</li>
<li>REST API - Клиенттай холбогдох, Docker deamon-той уялдан харилцана.</li>
</ul>
<p>Ѳѳрѳѳр хэлбэл докэр дотор ажиллаж байгааг image-с тусад нь volume үүсгэн ѳгч байна. Ингэснээр тухайн контейнер унтарсан ч дата персист тѳлѳвтэй дахин ашиглаж болно гэсэн юм. &ndash;driver гэдэг нь Докэр plugin ашиглаад зѳвхѳн Докэр роот-с хандалт хийх эрх локал volume үүсгэж байна. Датаг холбох ѳѳр нэг арга нь docker-compose дотор хостинг directory-г оноох боломжтой. Гэхдээ non-root хэрэглэгчийн хувьд харгалзах хандах эрх байгааг нягтлан шалгах хэрэгтэй. Жишээ нь хост direcory-г тодорхойж буй:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>volumes:
</span></span><span style="display:flex;"><span>  - <span style="color:#e6db74">&#39;odoo_data:/bitnami&#39;</span> <span style="color:#75715e">#Docker Host-с дотор тодорхойлсон volume.</span>
</span></span><span style="display:flex;"><span>  - <span style="color:#e6db74">&#39;./extra-addons:/bitnami/odoo/addons&#39;</span> <span style="color:#75715e"># Хост directory-г Container руу оруулж байна.</span>
</span></span></code></pre></div><p><code>odoo_data:/bitnami</code> дотор Odoo-г ажиллаж байх үеийн filestore -д Docker Host дотор <code>odoo_data</code> volume-д үүснэ. Docker volume руу зѳвхѳн Docker hosting хийж байгаа root хэрэглэгч хандах боломжтойг анхаарна уу.</p>
<p><code>./extra-addons:/bitnami/odoo/addons</code> - ./extra-addons, directory -г Odoo контейнер дах /bitnami/odoo/addons руу оруулж байна. Ингэснээр гуравдагч эдгээдийн модиуль болон хѳгжүүлэлтийн орчин дах нэмэлт модиулыг суулган ажиллуулах боломжтой болно.</p>
<p><code>/bitnami/odoo/addons</code>-г conf файл дотор тодорхойлж ѳгсѳн эсэхийг шалгах:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker exec -it &lt;container-name&gt; cat /opt/bitnami/odoo/odoo-server.conf
</span></span></code></pre></div><p>Bitnami -г дах Dockerfile болон нэмэлт pkg суух үед Odoo-гийн коор модиулидын directory болон нэмэлтээр суулгах модиулын directory-г тодорхойлон .conf файлд тохируулсан байгааг харж болно.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#f92672">[</span>options<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>addons_path <span style="color:#f92672">=</span> /opt/bitnami/odoo/odoo/addons,/opt/bitnami/odoo/addons
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p>docker-compose.yml - файл сүүлийн байдлаар:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>version: <span style="color:#e6db74">&#39;2&#39;</span>
</span></span><span style="display:flex;"><span>services:
</span></span><span style="display:flex;"><span>  postgresql:
</span></span><span style="display:flex;"><span>    image: <span style="color:#e6db74">&#39;docker.io/bitnami/postgresql:11-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>    environment:
</span></span><span style="display:flex;"><span>      - ALLOW_EMPTY_PASSWORD<span style="color:#f92672">=</span>yes
</span></span><span style="display:flex;"><span>    volumes:
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;postgresql_data:/bitnami/postgresql&#39;</span>
</span></span><span style="display:flex;"><span>  odoo:
</span></span><span style="display:flex;"><span>    image: <span style="color:#e6db74">&#39;docker.io/bitnami/odoo:14-debian-10&#39;</span>
</span></span><span style="display:flex;"><span>    ports:
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;80:8069&#39;</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;443:8071&#39;</span>
</span></span><span style="display:flex;"><span>    volumes:
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;odoo_data:/bitnami&#39;</span>
</span></span><span style="display:flex;"><span>      - <span style="color:#e6db74">&#39;./extra-addons:/bitnami/odoo/addons&#39;</span>
</span></span><span style="display:flex;"><span>    depends_on:
</span></span><span style="display:flex;"><span>      - postgresql
</span></span><span style="display:flex;"><span>volumes:
</span></span><span style="display:flex;"><span>  postgresql_data:
</span></span><span style="display:flex;"><span>    driver: local
</span></span><span style="display:flex;"><span>  odoo_data:
</span></span><span style="display:flex;"><span>    driver: local
</span></span></code></pre></div><p><a href="https://github.com/CaDiL/docker-101/tree/main/bitnami-odoo">Бүтэц:</a></p>
<pre tabindex="0"><code>...
# tree
/bitnami-odoo/
|-- extra-addons
|-- docker-compose.yml
...
</code></pre><h3 id="docker-compose-ажилууллах">Docker-compose ажилууллах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker-compose up -d
</span></span></code></pre></div><p>Image-үүд татаж дуусан networking хийн done болсон бол:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>Status: Downloaded newer image <span style="color:#66d9ef">for</span> bitnami/odoo:14-debian-10
</span></span><span style="display:flex;"><span>Creating bitnami-odoo_postgresql_1 ... <span style="color:#66d9ef">done</span>
</span></span><span style="display:flex;"><span>Creating bitnami-odoo_odoo_1       ... <span style="color:#66d9ef">done</span>
</span></span></code></pre></div><p><code>http://localhost/web/login</code> хаягаар хандан bitnami -с тодорхойлсон нэвтрэх нэр: <a href="mailto:user@example.com">user@example.com</a> нууц үг: bitnami, Odoo руу нэвтрэн орно. Эсхүл шинээр db тохируулах бол &lsquo;<code>http://localhost/web/database/selector</code> - хаягаар орон тохируулж болно.</p>
<h3 id="docker-compose-унтраах">Docker-compose унтраах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>$ docker-compose down
</span></span></code></pre></div><h3 id="volume-шалгах">Volume шалгах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker volume ls
</span></span></code></pre></div><h3 id="volume-устгах">Volume устгах:</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker volume rm &lt;volume-name&gt;
</span></span></code></pre></div>]]></content:encoded>
    </item>
  </channel>
</rss>
